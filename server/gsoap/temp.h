// Reminder: Modify typemap.dat to customize the header file generated by wsdl2h
/* temp.h
   Generated by wsdl2h 2.8.16 from baitour.xml.origin and typemap.dat
   2013-11-25 08:12:37 GMT

   DO NOT INCLUDE THIS FILE DIRECTLY INTO YOUR PROJECT BUILDS
   USE THE soapcpp2-GENERATED SOURCE CODE FILES FOR YOUR PROJECT BUILDS

   gSOAP XML Web services tools.
   Copyright (C) 2000-2013 Robert van Engelen, Genivia Inc. All Rights Reserved.
   Part of this software is released under one of the following licenses:
   GPL or Genivia's license for commercial use.
*/

/** @page page_notes Usage Notes

NOTE:

 - Run soapcpp2 on temp.h to generate the SOAP/XML processing logic.
   Use soapcpp2 -I to specify paths for #import
   To build with STL, 'stlvector.h' is imported from 'import' dir in package.
   Use soapcpp2 -j to generate improved proxy and server classes.
 - Use wsdl2h -c and -s to generate pure C code or C++ code without STL.
 - Use 'typemap.dat' to control namespace bindings and type mappings.
   It is strongly recommended to customize the names of the namespace prefixes
   generated by wsdl2h. To do so, modify the prefix bindings in the Namespaces
   section below and add the modified lines to 'typemap.dat' to rerun wsdl2h.
 - Use Doxygen (www.doxygen.org) on this file to generate documentation.
 - Use wsdl2h -R to generate REST operations.
 - Use wsdl2h -nname to use name as the base namespace prefix instead of 'ns'.
 - Use wsdl2h -Nname for service prefix and produce multiple service bindings
 - Use wsdl2h -d to enable DOM support for xsd:anyType.
 - Use wsdl2h -g to auto-generate readers and writers for root elements.
 - Use wsdl2h -b to auto-generate bi-directional operations (duplex ops).
 - Struct/class members serialized as XML attributes are annotated with a '@'.
 - Struct/class members that have a special role are annotated with a '$'.

WARNING:

   DO NOT INCLUDE THIS ANNOTATED FILE DIRECTLY IN YOUR PROJECT SOURCE CODE.
   USE THE FILES GENERATED BY soapcpp2 FOR YOUR PROJECT'S SOURCE CODE:
   THE soapStub.h FILE CONTAINS THIS CONTENT WITHOUT ANNOTATIONS.

LICENSE:

@verbatim
--------------------------------------------------------------------------------
gSOAP XML Web services tools
Copyright (C) 2000-2013, Robert van Engelen, Genivia Inc. All Rights Reserved.

This software is released under one of the following licenses:
GPL or Genivia's license for commercial use.
--------------------------------------------------------------------------------
GPL license.

This program is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation; either version 2 of the License, or (at your option) any later
version.

This program is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with
this program; if not, write to the Free Software Foundation, Inc., 59 Temple
Place, Suite 330, Boston, MA 02111-1307 USA

Author contact information:
engelen@genivia.com / engelen@acm.org

This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial-use license is available from Genivia, Inc., contact@genivia.com
--------------------------------------------------------------------------------
@endverbatim

*/


//gsoapopt w

/******************************************************************************\
 *                                                                            *
 * Definitions                                                                *
 *   http://www.baitour.com/                                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Import                                                                     *
 *                                                                            *
\******************************************************************************/


// STL vector containers (use option -s to remove STL dependency)
#import "stlvector.h"

/******************************************************************************\
 *                                                                            *
 * Schema Namespaces                                                          *
 *                                                                            *
\******************************************************************************/


/* NOTE:

It is strongly recommended to customize the names of the namespace prefixes
generated by wsdl2h. To do so, modify the prefix bindings below and add the
modified lines to typemap.dat to rerun wsdl2h:

ns1 = "http://www.baitour.com/"

*/

#define SOAP_NAMESPACE_OF_ns1	"http://www.baitour.com/"
//gsoap ns1   schema namespace:	http://www.baitour.com/
//gsoap ns1   schema elementForm:	qualified
//gsoap ns1   schema attributeForm:	unqualified

/******************************************************************************\
 *                                                                            *
 * Built-in Schema Types and Top-Level Elements and Attributes                *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Forward Declarations                                                       *
 *                                                                            *
\******************************************************************************/



//  Forward declaration of class _ns1__GetAllCommonPolicy.
class _ns1__GetAllCommonPolicy;

//  Forward declaration of class _ns1__GetAllCommonPolicyResponse.
class _ns1__GetAllCommonPolicyResponse;

//  Forward declaration of class _ns1__GetAllCommonPolicyZIP.
class _ns1__GetAllCommonPolicyZIP;

//  Forward declaration of class _ns1__GetAllCommonPolicyZIPResponse.
class _ns1__GetAllCommonPolicyZIPResponse;

//  Forward declaration of class _ns1__GetAlterCommonPolicy.
class _ns1__GetAlterCommonPolicy;

//  Forward declaration of class _ns1__GetAlterCommonPolicyResponse.
class _ns1__GetAlterCommonPolicyResponse;

//  Forward declaration of class _ns1__MatchCommonPolicy.
class _ns1__MatchCommonPolicy;

//  Forward declaration of class _ns1__MatchCommonPolicyResponse.
class _ns1__MatchCommonPolicyResponse;

//  Forward declaration of class _ns1__GetAVPolicy.
class _ns1__GetAVPolicy;

//  Forward declaration of class _ns1__GetAVPolicyResponse.
class _ns1__GetAVPolicyResponse;

//  Forward declaration of class _ns1__GetDomesticMatchNormalZRateByID.
class _ns1__GetDomesticMatchNormalZRateByID;

//  Forward declaration of class _ns1__GetDomesticMatchNormalZRateByIDResponse.
class _ns1__GetDomesticMatchNormalZRateByIDResponse;

//  Forward declaration of class _ns1__DetailCreateOrder.
class _ns1__DetailCreateOrder;

//  Forward declaration of class _ns1__DetailCreateOrderResponse.
class _ns1__DetailCreateOrderResponse;

//  Forward declaration of class _ns1__RTCreateOrder.
class _ns1__RTCreateOrder;

//  Forward declaration of class _ns1__RTCreateOrderResponse.
class _ns1__RTCreateOrderResponse;

//  Forward declaration of class _ns1__GetOrderInfo.
class _ns1__GetOrderInfo;

//  Forward declaration of class _ns1__GetOrderInfoResponse.
class _ns1__GetOrderInfoResponse;

//  Forward declaration of class _ns1__GetInvalidationProviders.
class _ns1__GetInvalidationProviders;

//  Forward declaration of class _ns1__GetInvalidationProvidersResponse.
class _ns1__GetInvalidationProvidersResponse;

//  Forward declaration of class _ns1__RefundOrder.
class _ns1__RefundOrder;

//  Forward declaration of class _ns1__RefundOrderResponse.
class _ns1__RefundOrderResponse;

//  Forward declaration of class _ns1__GetChangeFlightDate.
class _ns1__GetChangeFlightDate;

//  Forward declaration of class _ns1__GetChangeFlightDateResponse.
class _ns1__GetChangeFlightDateResponse;

/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://www.baitour.com/                                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.baitour.com/                                                  *
 *                                                                            *
\******************************************************************************/



/// Top-level root element "http://www.baitour.com/":GetAllCommonPolicy

/// "http://www.baitour.com/":GetAllCommonPolicy is a complexType.
/// class _ns1__GetAllCommonPolicy operations:
/// - soap_new__ns1__GetAllCommonPolicy(soap*) allocate
/// - soap_new__ns1__GetAllCommonPolicy(soap*, int num) allocate array
/// - soap_new_req__ns1__GetAllCommonPolicy(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__GetAllCommonPolicy(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__GetAllCommonPolicy(soap*, _ns1__GetAllCommonPolicy*) deserialize from a stream
/// - int soap_write__ns1__GetAllCommonPolicy(soap, _ns1__GetAllCommonPolicy*) serialize to a stream
class _ns1__GetAllCommonPolicy
{ public:
/// Element tripType of type xs:string.
    std::wstring*                        tripType                       0;	///< Optional element.
/// Element ticketType of type xs:string.
    std::wstring*                        ticketType                     0;	///< Optional element.
/// Element agentUserName of type xs:string.
    std::wstring*                        agentUserName                  0;	///< Optional element.
/// Element pwd of type xs:string.
    std::wstring*                        pwd                            0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.baitour.com/":GetAllCommonPolicyResponse

/// "http://www.baitour.com/":GetAllCommonPolicyResponse is a complexType.
/// class _ns1__GetAllCommonPolicyResponse operations:
/// - soap_new__ns1__GetAllCommonPolicyResponse(soap*) allocate
/// - soap_new__ns1__GetAllCommonPolicyResponse(soap*, int num) allocate array
/// - soap_new_req__ns1__GetAllCommonPolicyResponse(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__GetAllCommonPolicyResponse(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__GetAllCommonPolicyResponse(soap*, _ns1__GetAllCommonPolicyResponse*) deserialize from a stream
/// - int soap_write__ns1__GetAllCommonPolicyResponse(soap, _ns1__GetAllCommonPolicyResponse*) serialize to a stream
class _ns1__GetAllCommonPolicyResponse
{ public:
/// Element GetAllCommonPolicyResult of type xs:string.
    std::wstring*                        GetAllCommonPolicyResult       0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.baitour.com/":GetAllCommonPolicyZIP

/// "http://www.baitour.com/":GetAllCommonPolicyZIP is a complexType.
/// class _ns1__GetAllCommonPolicyZIP operations:
/// - soap_new__ns1__GetAllCommonPolicyZIP(soap*) allocate
/// - soap_new__ns1__GetAllCommonPolicyZIP(soap*, int num) allocate array
/// - soap_new_req__ns1__GetAllCommonPolicyZIP(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__GetAllCommonPolicyZIP(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__GetAllCommonPolicyZIP(soap*, _ns1__GetAllCommonPolicyZIP*) deserialize from a stream
/// - int soap_write__ns1__GetAllCommonPolicyZIP(soap, _ns1__GetAllCommonPolicyZIP*) serialize to a stream
class _ns1__GetAllCommonPolicyZIP
{ public:
/// Element tripType of type xs:string.
    std::wstring*                        tripType                       0;	///< Optional element.
/// Element ticketType of type xs:string.
    std::wstring*                        ticketType                     0;	///< Optional element.
/// Element agentUserName of type xs:string.
    std::wstring*                        agentUserName                  0;	///< Optional element.
/// Element pwd of type xs:string.
    std::wstring*                        pwd                            0;	///< Optional element.
/// Element zip of type xs:string.
    std::wstring*                        zip                            0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.baitour.com/":GetAllCommonPolicyZIPResponse

/// "http://www.baitour.com/":GetAllCommonPolicyZIPResponse is a complexType.
/// class _ns1__GetAllCommonPolicyZIPResponse operations:
/// - soap_new__ns1__GetAllCommonPolicyZIPResponse(soap*) allocate
/// - soap_new__ns1__GetAllCommonPolicyZIPResponse(soap*, int num) allocate array
/// - soap_new_req__ns1__GetAllCommonPolicyZIPResponse(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__GetAllCommonPolicyZIPResponse(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__GetAllCommonPolicyZIPResponse(soap*, _ns1__GetAllCommonPolicyZIPResponse*) deserialize from a stream
/// - int soap_write__ns1__GetAllCommonPolicyZIPResponse(soap, _ns1__GetAllCommonPolicyZIPResponse*) serialize to a stream
class _ns1__GetAllCommonPolicyZIPResponse
{ public:
/// Element GetAllCommonPolicyZIPResult of type xs:string.
    std::wstring*                        GetAllCommonPolicyZIPResult    0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.baitour.com/":GetAlterCommonPolicy

/// "http://www.baitour.com/":GetAlterCommonPolicy is a complexType.
/// class _ns1__GetAlterCommonPolicy operations:
/// - soap_new__ns1__GetAlterCommonPolicy(soap*) allocate
/// - soap_new__ns1__GetAlterCommonPolicy(soap*, int num) allocate array
/// - soap_new_req__ns1__GetAlterCommonPolicy(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__GetAlterCommonPolicy(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__GetAlterCommonPolicy(soap*, _ns1__GetAlterCommonPolicy*) deserialize from a stream
/// - int soap_write__ns1__GetAlterCommonPolicy(soap, _ns1__GetAlterCommonPolicy*) serialize to a stream
class _ns1__GetAlterCommonPolicy
{ public:
/// Element tripType of type xs:string.
    std::wstring*                        tripType                       0;	///< Optional element.
/// Element ticketType of type xs:string.
    std::wstring*                        ticketType                     0;	///< Optional element.
/// Element agentUserName of type xs:string.
    std::wstring*                        agentUserName                  0;	///< Optional element.
/// Element pwd of type xs:string.
    std::wstring*                        pwd                            0;	///< Optional element.
/// Element rQStartDateTime of type xs:string.
    std::wstring*                        rQStartDateTime                0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.baitour.com/":GetAlterCommonPolicyResponse

/// "http://www.baitour.com/":GetAlterCommonPolicyResponse is a complexType.
/// class _ns1__GetAlterCommonPolicyResponse operations:
/// - soap_new__ns1__GetAlterCommonPolicyResponse(soap*) allocate
/// - soap_new__ns1__GetAlterCommonPolicyResponse(soap*, int num) allocate array
/// - soap_new_req__ns1__GetAlterCommonPolicyResponse(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__GetAlterCommonPolicyResponse(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__GetAlterCommonPolicyResponse(soap*, _ns1__GetAlterCommonPolicyResponse*) deserialize from a stream
/// - int soap_write__ns1__GetAlterCommonPolicyResponse(soap, _ns1__GetAlterCommonPolicyResponse*) serialize to a stream
class _ns1__GetAlterCommonPolicyResponse
{ public:
/// Element GetAlterCommonPolicyResult of type xs:string.
    std::wstring*                        GetAlterCommonPolicyResult     0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.baitour.com/":MatchCommonPolicy

/// "http://www.baitour.com/":MatchCommonPolicy is a complexType.
/// class _ns1__MatchCommonPolicy operations:
/// - soap_new__ns1__MatchCommonPolicy(soap*) allocate
/// - soap_new__ns1__MatchCommonPolicy(soap*, int num) allocate array
/// - soap_new_req__ns1__MatchCommonPolicy(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__MatchCommonPolicy(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__MatchCommonPolicy(soap*, _ns1__MatchCommonPolicy*) deserialize from a stream
/// - int soap_write__ns1__MatchCommonPolicy(soap, _ns1__MatchCommonPolicy*) serialize to a stream
class _ns1__MatchCommonPolicy
{ public:
/// Element xmlDoc of type xs:string.
    std::wstring*                        xmlDoc                         0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.baitour.com/":MatchCommonPolicyResponse

/// "http://www.baitour.com/":MatchCommonPolicyResponse is a complexType.
/// class _ns1__MatchCommonPolicyResponse operations:
/// - soap_new__ns1__MatchCommonPolicyResponse(soap*) allocate
/// - soap_new__ns1__MatchCommonPolicyResponse(soap*, int num) allocate array
/// - soap_new_req__ns1__MatchCommonPolicyResponse(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__MatchCommonPolicyResponse(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__MatchCommonPolicyResponse(soap*, _ns1__MatchCommonPolicyResponse*) deserialize from a stream
/// - int soap_write__ns1__MatchCommonPolicyResponse(soap, _ns1__MatchCommonPolicyResponse*) serialize to a stream
class _ns1__MatchCommonPolicyResponse
{ public:
/// Element MatchCommonPolicyResult of type xs:string.
    std::wstring*                        MatchCommonPolicyResult        0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.baitour.com/":GetAVPolicy

/// "http://www.baitour.com/":GetAVPolicy is a complexType.
/// class _ns1__GetAVPolicy operations:
/// - soap_new__ns1__GetAVPolicy(soap*) allocate
/// - soap_new__ns1__GetAVPolicy(soap*, int num) allocate array
/// - soap_new_req__ns1__GetAVPolicy(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__GetAVPolicy(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__GetAVPolicy(soap*, _ns1__GetAVPolicy*) deserialize from a stream
/// - int soap_write__ns1__GetAVPolicy(soap, _ns1__GetAVPolicy*) serialize to a stream
class _ns1__GetAVPolicy
{ public:
/// Element xmlDoc of type xs:string.
    std::wstring*                        xmlDoc                         0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.baitour.com/":GetAVPolicyResponse

/// "http://www.baitour.com/":GetAVPolicyResponse is a complexType.
/// class _ns1__GetAVPolicyResponse operations:
/// - soap_new__ns1__GetAVPolicyResponse(soap*) allocate
/// - soap_new__ns1__GetAVPolicyResponse(soap*, int num) allocate array
/// - soap_new_req__ns1__GetAVPolicyResponse(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__GetAVPolicyResponse(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__GetAVPolicyResponse(soap*, _ns1__GetAVPolicyResponse*) deserialize from a stream
/// - int soap_write__ns1__GetAVPolicyResponse(soap, _ns1__GetAVPolicyResponse*) serialize to a stream
class _ns1__GetAVPolicyResponse
{ public:
/// Element GetAVPolicyResult of type xs:string.
    std::wstring*                        GetAVPolicyResult              0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.baitour.com/":GetDomesticMatchNormalZRateByID

/// "http://www.baitour.com/":GetDomesticMatchNormalZRateByID is a complexType.
/// class _ns1__GetDomesticMatchNormalZRateByID operations:
/// - soap_new__ns1__GetDomesticMatchNormalZRateByID(soap*) allocate
/// - soap_new__ns1__GetDomesticMatchNormalZRateByID(soap*, int num) allocate array
/// - soap_new_req__ns1__GetDomesticMatchNormalZRateByID(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__GetDomesticMatchNormalZRateByID(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__GetDomesticMatchNormalZRateByID(soap*, _ns1__GetDomesticMatchNormalZRateByID*) deserialize from a stream
/// - int soap_write__ns1__GetDomesticMatchNormalZRateByID(soap, _ns1__GetDomesticMatchNormalZRateByID*) serialize to a stream
class _ns1__GetDomesticMatchNormalZRateByID
{ public:
/// Element xmlDoc of type xs:string.
    std::wstring*                        xmlDoc                         0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.baitour.com/":GetDomesticMatchNormalZRateByIDResponse

/// "http://www.baitour.com/":GetDomesticMatchNormalZRateByIDResponse is a complexType.
/// class _ns1__GetDomesticMatchNormalZRateByIDResponse operations:
/// - soap_new__ns1__GetDomesticMatchNormalZRateByIDResponse(soap*) allocate
/// - soap_new__ns1__GetDomesticMatchNormalZRateByIDResponse(soap*, int num) allocate array
/// - soap_new_req__ns1__GetDomesticMatchNormalZRateByIDResponse(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__GetDomesticMatchNormalZRateByIDResponse(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__GetDomesticMatchNormalZRateByIDResponse(soap*, _ns1__GetDomesticMatchNormalZRateByIDResponse*) deserialize from a stream
/// - int soap_write__ns1__GetDomesticMatchNormalZRateByIDResponse(soap, _ns1__GetDomesticMatchNormalZRateByIDResponse*) serialize to a stream
class _ns1__GetDomesticMatchNormalZRateByIDResponse
{ public:
/// Element GetDomesticMatchNormalZRateByIDResult of type xs:string.
    std::wstring*                        GetDomesticMatchNormalZRateByIDResult 0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.baitour.com/":DetailCreateOrder

/// "http://www.baitour.com/":DetailCreateOrder is a complexType.
/// class _ns1__DetailCreateOrder operations:
/// - soap_new__ns1__DetailCreateOrder(soap*) allocate
/// - soap_new__ns1__DetailCreateOrder(soap*, int num) allocate array
/// - soap_new_req__ns1__DetailCreateOrder(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__DetailCreateOrder(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__DetailCreateOrder(soap*, _ns1__DetailCreateOrder*) deserialize from a stream
/// - int soap_write__ns1__DetailCreateOrder(soap, _ns1__DetailCreateOrder*) serialize to a stream
class _ns1__DetailCreateOrder
{ public:
/// Element xmlDoc of type xs:string.
    std::wstring*                        xmlDoc                         0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.baitour.com/":DetailCreateOrderResponse

/// "http://www.baitour.com/":DetailCreateOrderResponse is a complexType.
/// class _ns1__DetailCreateOrderResponse operations:
/// - soap_new__ns1__DetailCreateOrderResponse(soap*) allocate
/// - soap_new__ns1__DetailCreateOrderResponse(soap*, int num) allocate array
/// - soap_new_req__ns1__DetailCreateOrderResponse(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__DetailCreateOrderResponse(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__DetailCreateOrderResponse(soap*, _ns1__DetailCreateOrderResponse*) deserialize from a stream
/// - int soap_write__ns1__DetailCreateOrderResponse(soap, _ns1__DetailCreateOrderResponse*) serialize to a stream
class _ns1__DetailCreateOrderResponse
{ public:
/// Element DetailCreateOrderResult of type xs:string.
    std::wstring*                        DetailCreateOrderResult        0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.baitour.com/":RTCreateOrder

/// "http://www.baitour.com/":RTCreateOrder is a complexType.
/// class _ns1__RTCreateOrder operations:
/// - soap_new__ns1__RTCreateOrder(soap*) allocate
/// - soap_new__ns1__RTCreateOrder(soap*, int num) allocate array
/// - soap_new_req__ns1__RTCreateOrder(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__RTCreateOrder(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__RTCreateOrder(soap*, _ns1__RTCreateOrder*) deserialize from a stream
/// - int soap_write__ns1__RTCreateOrder(soap, _ns1__RTCreateOrder*) serialize to a stream
class _ns1__RTCreateOrder
{ public:
/// Element xmlDoc of type xs:string.
    std::wstring*                        xmlDoc                         0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.baitour.com/":RTCreateOrderResponse

/// "http://www.baitour.com/":RTCreateOrderResponse is a complexType.
/// class _ns1__RTCreateOrderResponse operations:
/// - soap_new__ns1__RTCreateOrderResponse(soap*) allocate
/// - soap_new__ns1__RTCreateOrderResponse(soap*, int num) allocate array
/// - soap_new_req__ns1__RTCreateOrderResponse(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__RTCreateOrderResponse(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__RTCreateOrderResponse(soap*, _ns1__RTCreateOrderResponse*) deserialize from a stream
/// - int soap_write__ns1__RTCreateOrderResponse(soap, _ns1__RTCreateOrderResponse*) serialize to a stream
class _ns1__RTCreateOrderResponse
{ public:
/// Element RTCreateOrderResult of type xs:string.
    std::wstring*                        RTCreateOrderResult            0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.baitour.com/":GetOrderInfo

/// "http://www.baitour.com/":GetOrderInfo is a complexType.
/// class _ns1__GetOrderInfo operations:
/// - soap_new__ns1__GetOrderInfo(soap*) allocate
/// - soap_new__ns1__GetOrderInfo(soap*, int num) allocate array
/// - soap_new_req__ns1__GetOrderInfo(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__GetOrderInfo(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__GetOrderInfo(soap*, _ns1__GetOrderInfo*) deserialize from a stream
/// - int soap_write__ns1__GetOrderInfo(soap, _ns1__GetOrderInfo*) serialize to a stream
class _ns1__GetOrderInfo
{ public:
/// Element AgentCode of type xs:string.
    std::wstring*                        AgentCode                      0;	///< Optional element.
/// Element AgentUserName of type xs:string.
    std::wstring*                        AgentUserName                  0;	///< Optional element.
/// Element AgentPwd of type xs:string.
    std::wstring*                        AgentPwd                       0;	///< Optional element.
/// Element OrderID of type xs:string.
    std::wstring*                        OrderID                        0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.baitour.com/":GetOrderInfoResponse

/// "http://www.baitour.com/":GetOrderInfoResponse is a complexType.
/// class _ns1__GetOrderInfoResponse operations:
/// - soap_new__ns1__GetOrderInfoResponse(soap*) allocate
/// - soap_new__ns1__GetOrderInfoResponse(soap*, int num) allocate array
/// - soap_new_req__ns1__GetOrderInfoResponse(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__GetOrderInfoResponse(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__GetOrderInfoResponse(soap*, _ns1__GetOrderInfoResponse*) deserialize from a stream
/// - int soap_write__ns1__GetOrderInfoResponse(soap, _ns1__GetOrderInfoResponse*) serialize to a stream
class _ns1__GetOrderInfoResponse
{ public:
/// Element GetOrderInfoResult of type xs:string.
    std::wstring*                        GetOrderInfoResult             0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.baitour.com/":GetInvalidationProviders

/// "http://www.baitour.com/":GetInvalidationProviders is a complexType.
/// class _ns1__GetInvalidationProviders operations:
/// - soap_new__ns1__GetInvalidationProviders(soap*) allocate
/// - soap_new__ns1__GetInvalidationProviders(soap*, int num) allocate array
/// - soap_new_req__ns1__GetInvalidationProviders(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__GetInvalidationProviders(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__GetInvalidationProviders(soap*, _ns1__GetInvalidationProviders*) deserialize from a stream
/// - int soap_write__ns1__GetInvalidationProviders(soap, _ns1__GetInvalidationProviders*) serialize to a stream
class _ns1__GetInvalidationProviders
{ public:
/// Element AgentCode of type xs:string.
    std::wstring*                        AgentCode                      0;	///< Optional element.
/// Element AgentUserName of type xs:string.
    std::wstring*                        AgentUserName                  0;	///< Optional element.
/// Element AgentPwd of type xs:string.
    std::wstring*                        AgentPwd                       0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.baitour.com/":GetInvalidationProvidersResponse

/// "http://www.baitour.com/":GetInvalidationProvidersResponse is a complexType.
/// class _ns1__GetInvalidationProvidersResponse operations:
/// - soap_new__ns1__GetInvalidationProvidersResponse(soap*) allocate
/// - soap_new__ns1__GetInvalidationProvidersResponse(soap*, int num) allocate array
/// - soap_new_req__ns1__GetInvalidationProvidersResponse(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__GetInvalidationProvidersResponse(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__GetInvalidationProvidersResponse(soap*, _ns1__GetInvalidationProvidersResponse*) deserialize from a stream
/// - int soap_write__ns1__GetInvalidationProvidersResponse(soap, _ns1__GetInvalidationProvidersResponse*) serialize to a stream
class _ns1__GetInvalidationProvidersResponse
{ public:
/// Element GetInvalidationProvidersResult of type xs:string.
    std::wstring*                        GetInvalidationProvidersResult 0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.baitour.com/":RefundOrder

/// "http://www.baitour.com/":RefundOrder is a complexType.
/// class _ns1__RefundOrder operations:
/// - soap_new__ns1__RefundOrder(soap*) allocate
/// - soap_new__ns1__RefundOrder(soap*, int num) allocate array
/// - soap_new_req__ns1__RefundOrder(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__RefundOrder(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__RefundOrder(soap*, _ns1__RefundOrder*) deserialize from a stream
/// - int soap_write__ns1__RefundOrder(soap, _ns1__RefundOrder*) serialize to a stream
class _ns1__RefundOrder
{ public:
/// Element xmlDoc of type xs:string.
    std::wstring*                        xmlDoc                         0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.baitour.com/":RefundOrderResponse

/// "http://www.baitour.com/":RefundOrderResponse is a complexType.
/// class _ns1__RefundOrderResponse operations:
/// - soap_new__ns1__RefundOrderResponse(soap*) allocate
/// - soap_new__ns1__RefundOrderResponse(soap*, int num) allocate array
/// - soap_new_req__ns1__RefundOrderResponse(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__RefundOrderResponse(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__RefundOrderResponse(soap*, _ns1__RefundOrderResponse*) deserialize from a stream
/// - int soap_write__ns1__RefundOrderResponse(soap, _ns1__RefundOrderResponse*) serialize to a stream
class _ns1__RefundOrderResponse
{ public:
/// Element RefundOrderResult of type xs:string.
    std::wstring*                        RefundOrderResult              0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.baitour.com/":GetChangeFlightDate

/// "http://www.baitour.com/":GetChangeFlightDate is a complexType.
/// class _ns1__GetChangeFlightDate operations:
/// - soap_new__ns1__GetChangeFlightDate(soap*) allocate
/// - soap_new__ns1__GetChangeFlightDate(soap*, int num) allocate array
/// - soap_new_req__ns1__GetChangeFlightDate(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__GetChangeFlightDate(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__GetChangeFlightDate(soap*, _ns1__GetChangeFlightDate*) deserialize from a stream
/// - int soap_write__ns1__GetChangeFlightDate(soap, _ns1__GetChangeFlightDate*) serialize to a stream
class _ns1__GetChangeFlightDate
{ public:
/// Element xmlDoc of type xs:string.
    std::wstring*                        xmlDoc                         0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://www.baitour.com/":GetChangeFlightDateResponse

/// "http://www.baitour.com/":GetChangeFlightDateResponse is a complexType.
/// class _ns1__GetChangeFlightDateResponse operations:
/// - soap_new__ns1__GetChangeFlightDateResponse(soap*) allocate
/// - soap_new__ns1__GetChangeFlightDateResponse(soap*, int num) allocate array
/// - soap_new_req__ns1__GetChangeFlightDateResponse(soap*, ...) allocate, set required members
/// - soap_new_set__ns1__GetChangeFlightDateResponse(soap*, ...) allocate, set all public members
/// - int soap_read__ns1__GetChangeFlightDateResponse(soap*, _ns1__GetChangeFlightDateResponse*) deserialize from a stream
/// - int soap_write__ns1__GetChangeFlightDateResponse(soap, _ns1__GetChangeFlightDateResponse*) serialize to a stream
class _ns1__GetChangeFlightDateResponse
{ public:
/// Element GetChangeFlightDateResult of type xs:string.
    std::wstring*                        GetChangeFlightDateResult      0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://www.baitour.com/                                                  *
 *                                                                            *
\******************************************************************************/


/// Top-level root element "http://www.baitour.com/":string of type xs:string.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://www.baitour.com/                                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Services                                                                   *
 *                                                                            *
\******************************************************************************/

// This service supports SOAP 1.2 namespaces:
#import "soap12.h"

//gsoap ns1  service name:	BaitourServiceSoap 
//gsoap ns1  service type:	BaitourServiceSoap 
//gsoap ns1  service port:	http://ite4.baitour.com/comanage/baitourService.asmx 
//gsoap ns1  service namespace:	http://www.baitour.com/ 
//gsoap ns1  service transport:	http://schemas.xmlsoap.org/soap/http 

/** @mainpage Service Definitions

@section Service_bindings Service Bindings

  - @ref BaitourServiceSoap

@section Service_more More Information

  - @ref page_notes "Usage Notes"

  - @ref page_XMLDataBinding "XML Data Binding"

  - @ref SOAP_ENV__Header "SOAP Header Content" (when applicable)

  - @ref SOAP_ENV__Detail "SOAP Fault Detail Content" (when applicable)


*/

/**

@page BaitourServiceSoap Binding "BaitourServiceSoap"

@section BaitourServiceSoap_operations Operations of Binding  "BaitourServiceSoap"

  - @ref __ns1__GetAllCommonPolicy

  - @ref __ns1__GetAllCommonPolicyZIP

  - @ref __ns1__GetAlterCommonPolicy

  - @ref __ns1__MatchCommonPolicy

  - @ref __ns1__GetAVPolicy

  - @ref __ns1__GetDomesticMatchNormalZRateByID

  - @ref __ns1__DetailCreateOrder

  - @ref __ns1__RTCreateOrder

  - @ref __ns1__GetOrderInfo

  - @ref __ns1__GetInvalidationProviders

  - @ref __ns1__RefundOrder

  - @ref __ns1__GetChangeFlightDate

  - @ref __ns1__GetAllCommonPolicy_

  - @ref __ns1__GetAllCommonPolicyZIP_

  - @ref __ns1__GetAlterCommonPolicy_

  - @ref __ns1__MatchCommonPolicy_

  - @ref __ns1__GetAVPolicy_

  - @ref __ns1__GetDomesticMatchNormalZRateByID_

  - @ref __ns1__DetailCreateOrder_

  - @ref __ns1__RTCreateOrder_

  - @ref __ns1__GetOrderInfo_

  - @ref __ns1__GetInvalidationProviders_

  - @ref __ns1__RefundOrder_

  - @ref __ns1__GetChangeFlightDate_

@section BaitourServiceSoap_ports Endpoints of Binding  "BaitourServiceSoap"

  - http://ite4.baitour.com/comanage/baitourService.asmx

Note: use wsdl2h option -Nname to change the service binding prefix name


*/

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   BaitourServiceSoap                                                       *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetAllCommonPolicy                                                *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetAllCommonPolicy" of service binding "BaitourServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - Action: "http://www.baitour.com/GetAllCommonPolicy"

  - Addressing input action: "http://www.baitour.com/GetAllCommonPolicy"

  - Addressing output action: "http://www.baitour.com/GetAllCommonPolicyResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetAllCommonPolicy(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__GetAllCommonPolicy*           ns1__GetAllCommonPolicy,
    // output parameters:
    _ns1__GetAllCommonPolicyResponse*   ns1__GetAllCommonPolicyResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetAllCommonPolicy(
    struct soap *soap,
    // input parameters:
    _ns1__GetAllCommonPolicy*           ns1__GetAllCommonPolicy,
    // output parameters:
    _ns1__GetAllCommonPolicyResponse*   ns1__GetAllCommonPolicyResponse
  );
@endcode

C++ proxy class (defined in soapBaitourServiceSoapProxy.h):
@code
  class BaitourServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBaitourServiceSoapService.h):
@code
  class BaitourServiceSoapService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetAllCommonPolicy SOAP
//gsoap ns1  service method-style:	GetAllCommonPolicy document
//gsoap ns1  service method-encoding:	GetAllCommonPolicy literal
//gsoap ns1  service method-input-action:	GetAllCommonPolicy http://www.baitour.com/GetAllCommonPolicy
//gsoap ns1  service method-output-action:	GetAllCommonPolicy http://www.baitour.com/GetAllCommonPolicyResponse
int __ns1__GetAllCommonPolicy(
    _ns1__GetAllCommonPolicy*           ns1__GetAllCommonPolicy,	///< Input parameter
    _ns1__GetAllCommonPolicyResponse*   ns1__GetAllCommonPolicyResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetAllCommonPolicyZIP                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetAllCommonPolicyZIP" of service binding "BaitourServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - Action: "http://www.baitour.com/GetAllCommonPolicyZIP"

  - Addressing input action: "http://www.baitour.com/GetAllCommonPolicyZIP"

  - Addressing output action: "http://www.baitour.com/GetAllCommonPolicyZIPResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetAllCommonPolicyZIP(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__GetAllCommonPolicyZIP*        ns1__GetAllCommonPolicyZIP,
    // output parameters:
    _ns1__GetAllCommonPolicyZIPResponse* ns1__GetAllCommonPolicyZIPResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetAllCommonPolicyZIP(
    struct soap *soap,
    // input parameters:
    _ns1__GetAllCommonPolicyZIP*        ns1__GetAllCommonPolicyZIP,
    // output parameters:
    _ns1__GetAllCommonPolicyZIPResponse* ns1__GetAllCommonPolicyZIPResponse
  );
@endcode

C++ proxy class (defined in soapBaitourServiceSoapProxy.h):
@code
  class BaitourServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBaitourServiceSoapService.h):
@code
  class BaitourServiceSoapService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetAllCommonPolicyZIP SOAP
//gsoap ns1  service method-style:	GetAllCommonPolicyZIP document
//gsoap ns1  service method-encoding:	GetAllCommonPolicyZIP literal
//gsoap ns1  service method-input-action:	GetAllCommonPolicyZIP http://www.baitour.com/GetAllCommonPolicyZIP
//gsoap ns1  service method-output-action:	GetAllCommonPolicyZIP http://www.baitour.com/GetAllCommonPolicyZIPResponse
int __ns1__GetAllCommonPolicyZIP(
    _ns1__GetAllCommonPolicyZIP*        ns1__GetAllCommonPolicyZIP,	///< Input parameter
    _ns1__GetAllCommonPolicyZIPResponse* ns1__GetAllCommonPolicyZIPResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetAlterCommonPolicy                                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetAlterCommonPolicy" of service binding "BaitourServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - Action: "http://www.baitour.com/GetAlterCommonPolicy"

  - Addressing input action: "http://www.baitour.com/GetAlterCommonPolicy"

  - Addressing output action: "http://www.baitour.com/GetAlterCommonPolicyResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetAlterCommonPolicy(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__GetAlterCommonPolicy*         ns1__GetAlterCommonPolicy,
    // output parameters:
    _ns1__GetAlterCommonPolicyResponse* ns1__GetAlterCommonPolicyResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetAlterCommonPolicy(
    struct soap *soap,
    // input parameters:
    _ns1__GetAlterCommonPolicy*         ns1__GetAlterCommonPolicy,
    // output parameters:
    _ns1__GetAlterCommonPolicyResponse* ns1__GetAlterCommonPolicyResponse
  );
@endcode

C++ proxy class (defined in soapBaitourServiceSoapProxy.h):
@code
  class BaitourServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBaitourServiceSoapService.h):
@code
  class BaitourServiceSoapService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetAlterCommonPolicy SOAP
//gsoap ns1  service method-style:	GetAlterCommonPolicy document
//gsoap ns1  service method-encoding:	GetAlterCommonPolicy literal
//gsoap ns1  service method-input-action:	GetAlterCommonPolicy http://www.baitour.com/GetAlterCommonPolicy
//gsoap ns1  service method-output-action:	GetAlterCommonPolicy http://www.baitour.com/GetAlterCommonPolicyResponse
int __ns1__GetAlterCommonPolicy(
    _ns1__GetAlterCommonPolicy*         ns1__GetAlterCommonPolicy,	///< Input parameter
    _ns1__GetAlterCommonPolicyResponse* ns1__GetAlterCommonPolicyResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__MatchCommonPolicy                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__MatchCommonPolicy" of service binding "BaitourServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - Action: "http://www.baitour.com/MatchCommonPolicy"

  - Addressing input action: "http://www.baitour.com/MatchCommonPolicy"

  - Addressing output action: "http://www.baitour.com/MatchCommonPolicyResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__MatchCommonPolicy(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__MatchCommonPolicy*            ns1__MatchCommonPolicy,
    // output parameters:
    _ns1__MatchCommonPolicyResponse*    ns1__MatchCommonPolicyResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__MatchCommonPolicy(
    struct soap *soap,
    // input parameters:
    _ns1__MatchCommonPolicy*            ns1__MatchCommonPolicy,
    // output parameters:
    _ns1__MatchCommonPolicyResponse*    ns1__MatchCommonPolicyResponse
  );
@endcode

C++ proxy class (defined in soapBaitourServiceSoapProxy.h):
@code
  class BaitourServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBaitourServiceSoapService.h):
@code
  class BaitourServiceSoapService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	MatchCommonPolicy SOAP
//gsoap ns1  service method-style:	MatchCommonPolicy document
//gsoap ns1  service method-encoding:	MatchCommonPolicy literal
//gsoap ns1  service method-input-action:	MatchCommonPolicy http://www.baitour.com/MatchCommonPolicy
//gsoap ns1  service method-output-action:	MatchCommonPolicy http://www.baitour.com/MatchCommonPolicyResponse
int __ns1__MatchCommonPolicy(
    _ns1__MatchCommonPolicy*            ns1__MatchCommonPolicy,	///< Input parameter
    _ns1__MatchCommonPolicyResponse*    ns1__MatchCommonPolicyResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetAVPolicy                                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetAVPolicy" of service binding "BaitourServiceSoap"

/**

Operation details:
AV

  - SOAP document/literal style messaging

  - Action: "http://www.baitour.com/GetAVPolicy"

  - Addressing input action: "http://www.baitour.com/GetAVPolicy"

  - Addressing output action: "http://www.baitour.com/GetAVPolicyResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetAVPolicy(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__GetAVPolicy*                  ns1__GetAVPolicy,
    // output parameters:
    _ns1__GetAVPolicyResponse*          ns1__GetAVPolicyResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetAVPolicy(
    struct soap *soap,
    // input parameters:
    _ns1__GetAVPolicy*                  ns1__GetAVPolicy,
    // output parameters:
    _ns1__GetAVPolicyResponse*          ns1__GetAVPolicyResponse
  );
@endcode

C++ proxy class (defined in soapBaitourServiceSoapProxy.h):
@code
  class BaitourServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBaitourServiceSoapService.h):
@code
  class BaitourServiceSoapService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetAVPolicy SOAP
//gsoap ns1  service method-style:	GetAVPolicy document
//gsoap ns1  service method-encoding:	GetAVPolicy literal
//gsoap ns1  service method-input-action:	GetAVPolicy http://www.baitour.com/GetAVPolicy
//gsoap ns1  service method-output-action:	GetAVPolicy http://www.baitour.com/GetAVPolicyResponse
int __ns1__GetAVPolicy(
    _ns1__GetAVPolicy*                  ns1__GetAVPolicy,	///< Input parameter
    _ns1__GetAVPolicyResponse*          ns1__GetAVPolicyResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetDomesticMatchNormalZRateByID                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetDomesticMatchNormalZRateByID" of service binding "BaitourServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - Action: "http://www.baitour.com/GetDomesticMatchNormalZRateByID"

  - Addressing input action: "http://www.baitour.com/GetDomesticMatchNormalZRateByID"

  - Addressing output action: "http://www.baitour.com/GetDomesticMatchNormalZRateByIDResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetDomesticMatchNormalZRateByID(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__GetDomesticMatchNormalZRateByID* ns1__GetDomesticMatchNormalZRateByID,
    // output parameters:
    _ns1__GetDomesticMatchNormalZRateByIDResponse* ns1__GetDomesticMatchNormalZRateByIDResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetDomesticMatchNormalZRateByID(
    struct soap *soap,
    // input parameters:
    _ns1__GetDomesticMatchNormalZRateByID* ns1__GetDomesticMatchNormalZRateByID,
    // output parameters:
    _ns1__GetDomesticMatchNormalZRateByIDResponse* ns1__GetDomesticMatchNormalZRateByIDResponse
  );
@endcode

C++ proxy class (defined in soapBaitourServiceSoapProxy.h):
@code
  class BaitourServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBaitourServiceSoapService.h):
@code
  class BaitourServiceSoapService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetDomesticMatchNormalZRateByID SOAP
//gsoap ns1  service method-style:	GetDomesticMatchNormalZRateByID document
//gsoap ns1  service method-encoding:	GetDomesticMatchNormalZRateByID literal
//gsoap ns1  service method-input-action:	GetDomesticMatchNormalZRateByID http://www.baitour.com/GetDomesticMatchNormalZRateByID
//gsoap ns1  service method-output-action:	GetDomesticMatchNormalZRateByID http://www.baitour.com/GetDomesticMatchNormalZRateByIDResponse
int __ns1__GetDomesticMatchNormalZRateByID(
    _ns1__GetDomesticMatchNormalZRateByID* ns1__GetDomesticMatchNormalZRateByID,	///< Input parameter
    _ns1__GetDomesticMatchNormalZRateByIDResponse* ns1__GetDomesticMatchNormalZRateByIDResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__DetailCreateOrder                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__DetailCreateOrder" of service binding "BaitourServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - Action: "http://www.baitour.com/DetailCreateOrder"

  - Addressing input action: "http://www.baitour.com/DetailCreateOrder"

  - Addressing output action: "http://www.baitour.com/DetailCreateOrderResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__DetailCreateOrder(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__DetailCreateOrder*            ns1__DetailCreateOrder,
    // output parameters:
    _ns1__DetailCreateOrderResponse*    ns1__DetailCreateOrderResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__DetailCreateOrder(
    struct soap *soap,
    // input parameters:
    _ns1__DetailCreateOrder*            ns1__DetailCreateOrder,
    // output parameters:
    _ns1__DetailCreateOrderResponse*    ns1__DetailCreateOrderResponse
  );
@endcode

C++ proxy class (defined in soapBaitourServiceSoapProxy.h):
@code
  class BaitourServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBaitourServiceSoapService.h):
@code
  class BaitourServiceSoapService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	DetailCreateOrder SOAP
//gsoap ns1  service method-style:	DetailCreateOrder document
//gsoap ns1  service method-encoding:	DetailCreateOrder literal
//gsoap ns1  service method-input-action:	DetailCreateOrder http://www.baitour.com/DetailCreateOrder
//gsoap ns1  service method-output-action:	DetailCreateOrder http://www.baitour.com/DetailCreateOrderResponse
int __ns1__DetailCreateOrder(
    _ns1__DetailCreateOrder*            ns1__DetailCreateOrder,	///< Input parameter
    _ns1__DetailCreateOrderResponse*    ns1__DetailCreateOrderResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__RTCreateOrder                                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__RTCreateOrder" of service binding "BaitourServiceSoap"

/**

Operation details:
RT

  - SOAP document/literal style messaging

  - Action: "http://www.baitour.com/RTCreateOrder"

  - Addressing input action: "http://www.baitour.com/RTCreateOrder"

  - Addressing output action: "http://www.baitour.com/RTCreateOrderResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__RTCreateOrder(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__RTCreateOrder*                ns1__RTCreateOrder,
    // output parameters:
    _ns1__RTCreateOrderResponse*        ns1__RTCreateOrderResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__RTCreateOrder(
    struct soap *soap,
    // input parameters:
    _ns1__RTCreateOrder*                ns1__RTCreateOrder,
    // output parameters:
    _ns1__RTCreateOrderResponse*        ns1__RTCreateOrderResponse
  );
@endcode

C++ proxy class (defined in soapBaitourServiceSoapProxy.h):
@code
  class BaitourServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBaitourServiceSoapService.h):
@code
  class BaitourServiceSoapService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	RTCreateOrder SOAP
//gsoap ns1  service method-style:	RTCreateOrder document
//gsoap ns1  service method-encoding:	RTCreateOrder literal
//gsoap ns1  service method-input-action:	RTCreateOrder http://www.baitour.com/RTCreateOrder
//gsoap ns1  service method-output-action:	RTCreateOrder http://www.baitour.com/RTCreateOrderResponse
int __ns1__RTCreateOrder(
    _ns1__RTCreateOrder*                ns1__RTCreateOrder,	///< Input parameter
    _ns1__RTCreateOrderResponse*        ns1__RTCreateOrderResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetOrderInfo                                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetOrderInfo" of service binding "BaitourServiceSoap"

/**

Operation details:
()

  - SOAP document/literal style messaging

  - Action: "http://www.baitour.com/GetOrderInfo"

  - Addressing input action: "http://www.baitour.com/GetOrderInfo"

  - Addressing output action: "http://www.baitour.com/GetOrderInfoResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetOrderInfo(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__GetOrderInfo*                 ns1__GetOrderInfo,
    // output parameters:
    _ns1__GetOrderInfoResponse*         ns1__GetOrderInfoResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetOrderInfo(
    struct soap *soap,
    // input parameters:
    _ns1__GetOrderInfo*                 ns1__GetOrderInfo,
    // output parameters:
    _ns1__GetOrderInfoResponse*         ns1__GetOrderInfoResponse
  );
@endcode

C++ proxy class (defined in soapBaitourServiceSoapProxy.h):
@code
  class BaitourServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBaitourServiceSoapService.h):
@code
  class BaitourServiceSoapService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetOrderInfo SOAP
//gsoap ns1  service method-style:	GetOrderInfo document
//gsoap ns1  service method-encoding:	GetOrderInfo literal
//gsoap ns1  service method-input-action:	GetOrderInfo http://www.baitour.com/GetOrderInfo
//gsoap ns1  service method-output-action:	GetOrderInfo http://www.baitour.com/GetOrderInfoResponse
int __ns1__GetOrderInfo(
    _ns1__GetOrderInfo*                 ns1__GetOrderInfo,	///< Input parameter
    _ns1__GetOrderInfoResponse*         ns1__GetOrderInfoResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetInvalidationProviders                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetInvalidationProviders" of service binding "BaitourServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - Action: "http://www.baitour.com/GetInvalidationProviders"

  - Addressing input action: "http://www.baitour.com/GetInvalidationProviders"

  - Addressing output action: "http://www.baitour.com/GetInvalidationProvidersResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetInvalidationProviders(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__GetInvalidationProviders*     ns1__GetInvalidationProviders,
    // output parameters:
    _ns1__GetInvalidationProvidersResponse* ns1__GetInvalidationProvidersResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetInvalidationProviders(
    struct soap *soap,
    // input parameters:
    _ns1__GetInvalidationProviders*     ns1__GetInvalidationProviders,
    // output parameters:
    _ns1__GetInvalidationProvidersResponse* ns1__GetInvalidationProvidersResponse
  );
@endcode

C++ proxy class (defined in soapBaitourServiceSoapProxy.h):
@code
  class BaitourServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBaitourServiceSoapService.h):
@code
  class BaitourServiceSoapService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetInvalidationProviders SOAP
//gsoap ns1  service method-style:	GetInvalidationProviders document
//gsoap ns1  service method-encoding:	GetInvalidationProviders literal
//gsoap ns1  service method-input-action:	GetInvalidationProviders http://www.baitour.com/GetInvalidationProviders
//gsoap ns1  service method-output-action:	GetInvalidationProviders http://www.baitour.com/GetInvalidationProvidersResponse
int __ns1__GetInvalidationProviders(
    _ns1__GetInvalidationProviders*     ns1__GetInvalidationProviders,	///< Input parameter
    _ns1__GetInvalidationProvidersResponse* ns1__GetInvalidationProvidersResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__RefundOrder                                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__RefundOrder" of service binding "BaitourServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - Action: "http://www.baitour.com/RefundOrder"

  - Addressing input action: "http://www.baitour.com/RefundOrder"

  - Addressing output action: "http://www.baitour.com/RefundOrderResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__RefundOrder(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__RefundOrder*                  ns1__RefundOrder,
    // output parameters:
    _ns1__RefundOrderResponse*          ns1__RefundOrderResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__RefundOrder(
    struct soap *soap,
    // input parameters:
    _ns1__RefundOrder*                  ns1__RefundOrder,
    // output parameters:
    _ns1__RefundOrderResponse*          ns1__RefundOrderResponse
  );
@endcode

C++ proxy class (defined in soapBaitourServiceSoapProxy.h):
@code
  class BaitourServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBaitourServiceSoapService.h):
@code
  class BaitourServiceSoapService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	RefundOrder SOAP
//gsoap ns1  service method-style:	RefundOrder document
//gsoap ns1  service method-encoding:	RefundOrder literal
//gsoap ns1  service method-input-action:	RefundOrder http://www.baitour.com/RefundOrder
//gsoap ns1  service method-output-action:	RefundOrder http://www.baitour.com/RefundOrderResponse
int __ns1__RefundOrder(
    _ns1__RefundOrder*                  ns1__RefundOrder,	///< Input parameter
    _ns1__RefundOrderResponse*          ns1__RefundOrderResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetChangeFlightDate                                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetChangeFlightDate" of service binding "BaitourServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - Action: "http://www.baitour.com/GetChangeFlightDate"

  - Addressing input action: "http://www.baitour.com/GetChangeFlightDate"

  - Addressing output action: "http://www.baitour.com/GetChangeFlightDateResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetChangeFlightDate(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__GetChangeFlightDate*          ns1__GetChangeFlightDate,
    // output parameters:
    _ns1__GetChangeFlightDateResponse*  ns1__GetChangeFlightDateResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetChangeFlightDate(
    struct soap *soap,
    // input parameters:
    _ns1__GetChangeFlightDate*          ns1__GetChangeFlightDate,
    // output parameters:
    _ns1__GetChangeFlightDateResponse*  ns1__GetChangeFlightDateResponse
  );
@endcode

C++ proxy class (defined in soapBaitourServiceSoapProxy.h):
@code
  class BaitourServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBaitourServiceSoapService.h):
@code
  class BaitourServiceSoapService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetChangeFlightDate SOAP
//gsoap ns1  service method-style:	GetChangeFlightDate document
//gsoap ns1  service method-encoding:	GetChangeFlightDate literal
//gsoap ns1  service method-input-action:	GetChangeFlightDate http://www.baitour.com/GetChangeFlightDate
//gsoap ns1  service method-output-action:	GetChangeFlightDate http://www.baitour.com/GetChangeFlightDateResponse
int __ns1__GetChangeFlightDate(
    _ns1__GetChangeFlightDate*          ns1__GetChangeFlightDate,	///< Input parameter
    _ns1__GetChangeFlightDateResponse*  ns1__GetChangeFlightDateResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetAllCommonPolicy_                                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetAllCommonPolicy_" of service binding "BaitourServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - Action: "http://www.baitour.com/GetAllCommonPolicy"

  - Addressing input action: "http://www.baitour.com/GetAllCommonPolicy"

  - Addressing output action: "http://www.baitour.com/GetAllCommonPolicyResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetAllCommonPolicy_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__GetAllCommonPolicy*           ns1__GetAllCommonPolicy,
    // output parameters:
    _ns1__GetAllCommonPolicyResponse*   ns1__GetAllCommonPolicyResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetAllCommonPolicy_(
    struct soap *soap,
    // input parameters:
    _ns1__GetAllCommonPolicy*           ns1__GetAllCommonPolicy,
    // output parameters:
    _ns1__GetAllCommonPolicyResponse*   ns1__GetAllCommonPolicyResponse
  );
@endcode

C++ proxy class (defined in soapBaitourServiceSoapProxy.h):
@code
  class BaitourServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBaitourServiceSoapService.h):
@code
  class BaitourServiceSoapService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetAllCommonPolicy_ SOAP
//gsoap ns1  service method-style:	GetAllCommonPolicy_ document
//gsoap ns1  service method-encoding:	GetAllCommonPolicy_ literal
//gsoap ns1  service method-input-action:	GetAllCommonPolicy_ http://www.baitour.com/GetAllCommonPolicy
//gsoap ns1  service method-output-action:	GetAllCommonPolicy_ http://www.baitour.com/GetAllCommonPolicyResponse
int __ns1__GetAllCommonPolicy_(
    _ns1__GetAllCommonPolicy*           ns1__GetAllCommonPolicy,	///< Input parameter
    _ns1__GetAllCommonPolicyResponse*   ns1__GetAllCommonPolicyResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetAllCommonPolicyZIP_                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetAllCommonPolicyZIP_" of service binding "BaitourServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - Action: "http://www.baitour.com/GetAllCommonPolicyZIP"

  - Addressing input action: "http://www.baitour.com/GetAllCommonPolicyZIP"

  - Addressing output action: "http://www.baitour.com/GetAllCommonPolicyZIPResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetAllCommonPolicyZIP_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__GetAllCommonPolicyZIP*        ns1__GetAllCommonPolicyZIP,
    // output parameters:
    _ns1__GetAllCommonPolicyZIPResponse* ns1__GetAllCommonPolicyZIPResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetAllCommonPolicyZIP_(
    struct soap *soap,
    // input parameters:
    _ns1__GetAllCommonPolicyZIP*        ns1__GetAllCommonPolicyZIP,
    // output parameters:
    _ns1__GetAllCommonPolicyZIPResponse* ns1__GetAllCommonPolicyZIPResponse
  );
@endcode

C++ proxy class (defined in soapBaitourServiceSoapProxy.h):
@code
  class BaitourServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBaitourServiceSoapService.h):
@code
  class BaitourServiceSoapService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetAllCommonPolicyZIP_ SOAP
//gsoap ns1  service method-style:	GetAllCommonPolicyZIP_ document
//gsoap ns1  service method-encoding:	GetAllCommonPolicyZIP_ literal
//gsoap ns1  service method-input-action:	GetAllCommonPolicyZIP_ http://www.baitour.com/GetAllCommonPolicyZIP
//gsoap ns1  service method-output-action:	GetAllCommonPolicyZIP_ http://www.baitour.com/GetAllCommonPolicyZIPResponse
int __ns1__GetAllCommonPolicyZIP_(
    _ns1__GetAllCommonPolicyZIP*        ns1__GetAllCommonPolicyZIP,	///< Input parameter
    _ns1__GetAllCommonPolicyZIPResponse* ns1__GetAllCommonPolicyZIPResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetAlterCommonPolicy_                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetAlterCommonPolicy_" of service binding "BaitourServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - Action: "http://www.baitour.com/GetAlterCommonPolicy"

  - Addressing input action: "http://www.baitour.com/GetAlterCommonPolicy"

  - Addressing output action: "http://www.baitour.com/GetAlterCommonPolicyResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetAlterCommonPolicy_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__GetAlterCommonPolicy*         ns1__GetAlterCommonPolicy,
    // output parameters:
    _ns1__GetAlterCommonPolicyResponse* ns1__GetAlterCommonPolicyResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetAlterCommonPolicy_(
    struct soap *soap,
    // input parameters:
    _ns1__GetAlterCommonPolicy*         ns1__GetAlterCommonPolicy,
    // output parameters:
    _ns1__GetAlterCommonPolicyResponse* ns1__GetAlterCommonPolicyResponse
  );
@endcode

C++ proxy class (defined in soapBaitourServiceSoapProxy.h):
@code
  class BaitourServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBaitourServiceSoapService.h):
@code
  class BaitourServiceSoapService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetAlterCommonPolicy_ SOAP
//gsoap ns1  service method-style:	GetAlterCommonPolicy_ document
//gsoap ns1  service method-encoding:	GetAlterCommonPolicy_ literal
//gsoap ns1  service method-input-action:	GetAlterCommonPolicy_ http://www.baitour.com/GetAlterCommonPolicy
//gsoap ns1  service method-output-action:	GetAlterCommonPolicy_ http://www.baitour.com/GetAlterCommonPolicyResponse
int __ns1__GetAlterCommonPolicy_(
    _ns1__GetAlterCommonPolicy*         ns1__GetAlterCommonPolicy,	///< Input parameter
    _ns1__GetAlterCommonPolicyResponse* ns1__GetAlterCommonPolicyResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__MatchCommonPolicy_                                                *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__MatchCommonPolicy_" of service binding "BaitourServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - Action: "http://www.baitour.com/MatchCommonPolicy"

  - Addressing input action: "http://www.baitour.com/MatchCommonPolicy"

  - Addressing output action: "http://www.baitour.com/MatchCommonPolicyResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__MatchCommonPolicy_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__MatchCommonPolicy*            ns1__MatchCommonPolicy,
    // output parameters:
    _ns1__MatchCommonPolicyResponse*    ns1__MatchCommonPolicyResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__MatchCommonPolicy_(
    struct soap *soap,
    // input parameters:
    _ns1__MatchCommonPolicy*            ns1__MatchCommonPolicy,
    // output parameters:
    _ns1__MatchCommonPolicyResponse*    ns1__MatchCommonPolicyResponse
  );
@endcode

C++ proxy class (defined in soapBaitourServiceSoapProxy.h):
@code
  class BaitourServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBaitourServiceSoapService.h):
@code
  class BaitourServiceSoapService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	MatchCommonPolicy_ SOAP
//gsoap ns1  service method-style:	MatchCommonPolicy_ document
//gsoap ns1  service method-encoding:	MatchCommonPolicy_ literal
//gsoap ns1  service method-input-action:	MatchCommonPolicy_ http://www.baitour.com/MatchCommonPolicy
//gsoap ns1  service method-output-action:	MatchCommonPolicy_ http://www.baitour.com/MatchCommonPolicyResponse
int __ns1__MatchCommonPolicy_(
    _ns1__MatchCommonPolicy*            ns1__MatchCommonPolicy,	///< Input parameter
    _ns1__MatchCommonPolicyResponse*    ns1__MatchCommonPolicyResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetAVPolicy_                                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetAVPolicy_" of service binding "BaitourServiceSoap"

/**

Operation details:
AV

  - SOAP document/literal style messaging

  - Action: "http://www.baitour.com/GetAVPolicy"

  - Addressing input action: "http://www.baitour.com/GetAVPolicy"

  - Addressing output action: "http://www.baitour.com/GetAVPolicyResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetAVPolicy_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__GetAVPolicy*                  ns1__GetAVPolicy,
    // output parameters:
    _ns1__GetAVPolicyResponse*          ns1__GetAVPolicyResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetAVPolicy_(
    struct soap *soap,
    // input parameters:
    _ns1__GetAVPolicy*                  ns1__GetAVPolicy,
    // output parameters:
    _ns1__GetAVPolicyResponse*          ns1__GetAVPolicyResponse
  );
@endcode

C++ proxy class (defined in soapBaitourServiceSoapProxy.h):
@code
  class BaitourServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBaitourServiceSoapService.h):
@code
  class BaitourServiceSoapService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetAVPolicy_ SOAP
//gsoap ns1  service method-style:	GetAVPolicy_ document
//gsoap ns1  service method-encoding:	GetAVPolicy_ literal
//gsoap ns1  service method-input-action:	GetAVPolicy_ http://www.baitour.com/GetAVPolicy
//gsoap ns1  service method-output-action:	GetAVPolicy_ http://www.baitour.com/GetAVPolicyResponse
int __ns1__GetAVPolicy_(
    _ns1__GetAVPolicy*                  ns1__GetAVPolicy,	///< Input parameter
    _ns1__GetAVPolicyResponse*          ns1__GetAVPolicyResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetDomesticMatchNormalZRateByID_                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetDomesticMatchNormalZRateByID_" of service binding "BaitourServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - Action: "http://www.baitour.com/GetDomesticMatchNormalZRateByID"

  - Addressing input action: "http://www.baitour.com/GetDomesticMatchNormalZRateByID"

  - Addressing output action: "http://www.baitour.com/GetDomesticMatchNormalZRateByIDResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetDomesticMatchNormalZRateByID_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__GetDomesticMatchNormalZRateByID* ns1__GetDomesticMatchNormalZRateByID,
    // output parameters:
    _ns1__GetDomesticMatchNormalZRateByIDResponse* ns1__GetDomesticMatchNormalZRateByIDResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetDomesticMatchNormalZRateByID_(
    struct soap *soap,
    // input parameters:
    _ns1__GetDomesticMatchNormalZRateByID* ns1__GetDomesticMatchNormalZRateByID,
    // output parameters:
    _ns1__GetDomesticMatchNormalZRateByIDResponse* ns1__GetDomesticMatchNormalZRateByIDResponse
  );
@endcode

C++ proxy class (defined in soapBaitourServiceSoapProxy.h):
@code
  class BaitourServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBaitourServiceSoapService.h):
@code
  class BaitourServiceSoapService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetDomesticMatchNormalZRateByID_ SOAP
//gsoap ns1  service method-style:	GetDomesticMatchNormalZRateByID_ document
//gsoap ns1  service method-encoding:	GetDomesticMatchNormalZRateByID_ literal
//gsoap ns1  service method-input-action:	GetDomesticMatchNormalZRateByID_ http://www.baitour.com/GetDomesticMatchNormalZRateByID
//gsoap ns1  service method-output-action:	GetDomesticMatchNormalZRateByID_ http://www.baitour.com/GetDomesticMatchNormalZRateByIDResponse
int __ns1__GetDomesticMatchNormalZRateByID_(
    _ns1__GetDomesticMatchNormalZRateByID* ns1__GetDomesticMatchNormalZRateByID,	///< Input parameter
    _ns1__GetDomesticMatchNormalZRateByIDResponse* ns1__GetDomesticMatchNormalZRateByIDResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__DetailCreateOrder_                                                *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__DetailCreateOrder_" of service binding "BaitourServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - Action: "http://www.baitour.com/DetailCreateOrder"

  - Addressing input action: "http://www.baitour.com/DetailCreateOrder"

  - Addressing output action: "http://www.baitour.com/DetailCreateOrderResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__DetailCreateOrder_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__DetailCreateOrder*            ns1__DetailCreateOrder,
    // output parameters:
    _ns1__DetailCreateOrderResponse*    ns1__DetailCreateOrderResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__DetailCreateOrder_(
    struct soap *soap,
    // input parameters:
    _ns1__DetailCreateOrder*            ns1__DetailCreateOrder,
    // output parameters:
    _ns1__DetailCreateOrderResponse*    ns1__DetailCreateOrderResponse
  );
@endcode

C++ proxy class (defined in soapBaitourServiceSoapProxy.h):
@code
  class BaitourServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBaitourServiceSoapService.h):
@code
  class BaitourServiceSoapService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	DetailCreateOrder_ SOAP
//gsoap ns1  service method-style:	DetailCreateOrder_ document
//gsoap ns1  service method-encoding:	DetailCreateOrder_ literal
//gsoap ns1  service method-input-action:	DetailCreateOrder_ http://www.baitour.com/DetailCreateOrder
//gsoap ns1  service method-output-action:	DetailCreateOrder_ http://www.baitour.com/DetailCreateOrderResponse
int __ns1__DetailCreateOrder_(
    _ns1__DetailCreateOrder*            ns1__DetailCreateOrder,	///< Input parameter
    _ns1__DetailCreateOrderResponse*    ns1__DetailCreateOrderResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__RTCreateOrder_                                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__RTCreateOrder_" of service binding "BaitourServiceSoap"

/**

Operation details:
RT

  - SOAP document/literal style messaging

  - Action: "http://www.baitour.com/RTCreateOrder"

  - Addressing input action: "http://www.baitour.com/RTCreateOrder"

  - Addressing output action: "http://www.baitour.com/RTCreateOrderResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__RTCreateOrder_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__RTCreateOrder*                ns1__RTCreateOrder,
    // output parameters:
    _ns1__RTCreateOrderResponse*        ns1__RTCreateOrderResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__RTCreateOrder_(
    struct soap *soap,
    // input parameters:
    _ns1__RTCreateOrder*                ns1__RTCreateOrder,
    // output parameters:
    _ns1__RTCreateOrderResponse*        ns1__RTCreateOrderResponse
  );
@endcode

C++ proxy class (defined in soapBaitourServiceSoapProxy.h):
@code
  class BaitourServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBaitourServiceSoapService.h):
@code
  class BaitourServiceSoapService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	RTCreateOrder_ SOAP
//gsoap ns1  service method-style:	RTCreateOrder_ document
//gsoap ns1  service method-encoding:	RTCreateOrder_ literal
//gsoap ns1  service method-input-action:	RTCreateOrder_ http://www.baitour.com/RTCreateOrder
//gsoap ns1  service method-output-action:	RTCreateOrder_ http://www.baitour.com/RTCreateOrderResponse
int __ns1__RTCreateOrder_(
    _ns1__RTCreateOrder*                ns1__RTCreateOrder,	///< Input parameter
    _ns1__RTCreateOrderResponse*        ns1__RTCreateOrderResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetOrderInfo_                                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetOrderInfo_" of service binding "BaitourServiceSoap"

/**

Operation details:
()

  - SOAP document/literal style messaging

  - Action: "http://www.baitour.com/GetOrderInfo"

  - Addressing input action: "http://www.baitour.com/GetOrderInfo"

  - Addressing output action: "http://www.baitour.com/GetOrderInfoResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetOrderInfo_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__GetOrderInfo*                 ns1__GetOrderInfo,
    // output parameters:
    _ns1__GetOrderInfoResponse*         ns1__GetOrderInfoResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetOrderInfo_(
    struct soap *soap,
    // input parameters:
    _ns1__GetOrderInfo*                 ns1__GetOrderInfo,
    // output parameters:
    _ns1__GetOrderInfoResponse*         ns1__GetOrderInfoResponse
  );
@endcode

C++ proxy class (defined in soapBaitourServiceSoapProxy.h):
@code
  class BaitourServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBaitourServiceSoapService.h):
@code
  class BaitourServiceSoapService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetOrderInfo_ SOAP
//gsoap ns1  service method-style:	GetOrderInfo_ document
//gsoap ns1  service method-encoding:	GetOrderInfo_ literal
//gsoap ns1  service method-input-action:	GetOrderInfo_ http://www.baitour.com/GetOrderInfo
//gsoap ns1  service method-output-action:	GetOrderInfo_ http://www.baitour.com/GetOrderInfoResponse
int __ns1__GetOrderInfo_(
    _ns1__GetOrderInfo*                 ns1__GetOrderInfo,	///< Input parameter
    _ns1__GetOrderInfoResponse*         ns1__GetOrderInfoResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetInvalidationProviders_                                         *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetInvalidationProviders_" of service binding "BaitourServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - Action: "http://www.baitour.com/GetInvalidationProviders"

  - Addressing input action: "http://www.baitour.com/GetInvalidationProviders"

  - Addressing output action: "http://www.baitour.com/GetInvalidationProvidersResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetInvalidationProviders_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__GetInvalidationProviders*     ns1__GetInvalidationProviders,
    // output parameters:
    _ns1__GetInvalidationProvidersResponse* ns1__GetInvalidationProvidersResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetInvalidationProviders_(
    struct soap *soap,
    // input parameters:
    _ns1__GetInvalidationProviders*     ns1__GetInvalidationProviders,
    // output parameters:
    _ns1__GetInvalidationProvidersResponse* ns1__GetInvalidationProvidersResponse
  );
@endcode

C++ proxy class (defined in soapBaitourServiceSoapProxy.h):
@code
  class BaitourServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBaitourServiceSoapService.h):
@code
  class BaitourServiceSoapService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetInvalidationProviders_ SOAP
//gsoap ns1  service method-style:	GetInvalidationProviders_ document
//gsoap ns1  service method-encoding:	GetInvalidationProviders_ literal
//gsoap ns1  service method-input-action:	GetInvalidationProviders_ http://www.baitour.com/GetInvalidationProviders
//gsoap ns1  service method-output-action:	GetInvalidationProviders_ http://www.baitour.com/GetInvalidationProvidersResponse
int __ns1__GetInvalidationProviders_(
    _ns1__GetInvalidationProviders*     ns1__GetInvalidationProviders,	///< Input parameter
    _ns1__GetInvalidationProvidersResponse* ns1__GetInvalidationProvidersResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__RefundOrder_                                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__RefundOrder_" of service binding "BaitourServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - Action: "http://www.baitour.com/RefundOrder"

  - Addressing input action: "http://www.baitour.com/RefundOrder"

  - Addressing output action: "http://www.baitour.com/RefundOrderResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__RefundOrder_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__RefundOrder*                  ns1__RefundOrder,
    // output parameters:
    _ns1__RefundOrderResponse*          ns1__RefundOrderResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__RefundOrder_(
    struct soap *soap,
    // input parameters:
    _ns1__RefundOrder*                  ns1__RefundOrder,
    // output parameters:
    _ns1__RefundOrderResponse*          ns1__RefundOrderResponse
  );
@endcode

C++ proxy class (defined in soapBaitourServiceSoapProxy.h):
@code
  class BaitourServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBaitourServiceSoapService.h):
@code
  class BaitourServiceSoapService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	RefundOrder_ SOAP
//gsoap ns1  service method-style:	RefundOrder_ document
//gsoap ns1  service method-encoding:	RefundOrder_ literal
//gsoap ns1  service method-input-action:	RefundOrder_ http://www.baitour.com/RefundOrder
//gsoap ns1  service method-output-action:	RefundOrder_ http://www.baitour.com/RefundOrderResponse
int __ns1__RefundOrder_(
    _ns1__RefundOrder*                  ns1__RefundOrder,	///< Input parameter
    _ns1__RefundOrderResponse*          ns1__RefundOrderResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetChangeFlightDate_                                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetChangeFlightDate_" of service binding "BaitourServiceSoap"

/**

Operation details:


  - SOAP document/literal style messaging

  - Action: "http://www.baitour.com/GetChangeFlightDate"

  - Addressing input action: "http://www.baitour.com/GetChangeFlightDate"

  - Addressing output action: "http://www.baitour.com/GetChangeFlightDateResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetChangeFlightDate_(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _ns1__GetChangeFlightDate*          ns1__GetChangeFlightDate,
    // output parameters:
    _ns1__GetChangeFlightDateResponse*  ns1__GetChangeFlightDateResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetChangeFlightDate_(
    struct soap *soap,
    // input parameters:
    _ns1__GetChangeFlightDate*          ns1__GetChangeFlightDate,
    // output parameters:
    _ns1__GetChangeFlightDateResponse*  ns1__GetChangeFlightDateResponse
  );
@endcode

C++ proxy class (defined in soapBaitourServiceSoapProxy.h):
@code
  class BaitourServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBaitourServiceSoapService.h):
@code
  class BaitourServiceSoapService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap ns1  service method-protocol:	GetChangeFlightDate_ SOAP
//gsoap ns1  service method-style:	GetChangeFlightDate_ document
//gsoap ns1  service method-encoding:	GetChangeFlightDate_ literal
//gsoap ns1  service method-input-action:	GetChangeFlightDate_ http://www.baitour.com/GetChangeFlightDate
//gsoap ns1  service method-output-action:	GetChangeFlightDate_ http://www.baitour.com/GetChangeFlightDateResponse
int __ns1__GetChangeFlightDate_(
    _ns1__GetChangeFlightDate*          ns1__GetChangeFlightDate,	///< Input parameter
    _ns1__GetChangeFlightDateResponse*  ns1__GetChangeFlightDateResponse	///< Output parameter
);

/**

@page BaitourServiceSoap Binding "BaitourServiceSoap"

@section BaitourServiceSoap_policy_enablers Policy Enablers of Binding  "BaitourServiceSoap"

Based on policies, this service imports

  - WS-Policy reminders and enablers:
    - WS-Addressing 1.0 (2005/08, accepts 2004/08):
	@code
	#import "wsa5.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-Addressing (2004/08):
	@code
	#import "wsa.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-ReliableMessaging 1.0:
	@code
	#import "wsrm5.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsrmapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	soap_register_plugin(soap, soap_wsrm); // register the wsrm plugin in your code
	// See the user guide gsoap/doc/wsrm/html/index.html
	@endcode
    - WS-ReliableMessaging 1.1:
	@code
	#import "wsrm.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsrmapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	soap_register_plugin(soap, soap_wsrm); // register the wsrm plugin in your code
	// See the user guide gsoap/doc/wsrm/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.0 (accepts 1.1):
	@code
	#import "wsse.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.1 (accepts 1.0):
	@code
	#import "wsse11.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - HTTP Digest Authentication:
	@code
	#include "plugin/httpda.h"
	soap_register_plugin(soap, soap_http_da); // register the HTTP DA plugin in your code
	// See the user guide gsoap/doc/httpda/html/index.html
	@endcode
*/


/******************************************************************************\
 *                                                                            *
 * XML Data Binding                                                           *
 *                                                                            *
\******************************************************************************/


/**

@page page_XMLDataBinding XML Data Binding

SOAP/XML services use data bindings contractually bound by WSDL and auto-
generated by wsdl2h and soapcpp2 (see Service Bindings). Plain data bindings
are adopted from XML schemas as part of the WSDL types section or when running
wsdl2h on a set of schemas to produce non-SOAP-based XML data bindings.

The following readers and writers are C/C++ data type (de)serializers auto-
generated by wsdl2h and soapcpp2. Run soapcpp2 on this file to generate the
(de)serialization code, which is stored in soapC.c[pp]. Include "soapH.h" in
your code to import these data type and function declarations. Only use the
soapcpp2-generated files in your project build. Do not include the wsdl2h-
generated .h file in your code.

Data can be read in XML and deserialized from:
  - a file descriptor, using soap->recvfd = fd
  - a socket, using soap->socket = ...
  - a C++ stream, using soap->is = ...
  - a buffer, using the soap->frecv() callback

Data can be serialized in XML and written to:
  - a file descriptor, using soap->sendfd = fd
  - a socket, using soap->socket = ...
  - a C++ stream, using soap->os = ...
  - a buffer, using the soap->fsend() callback

The following options are available for (de)serialization control:
  - soap->encodingStyle = NULL; to remove SOAP 1.1/1.2 encodingStyle
  - soap_mode(soap, SOAP_XML_TREE); XML without id-ref (no cycles!)
  - soap_mode(soap, SOAP_XML_GRAPH); XML with id-ref (including cycles)
  - soap_set_namespaces(soap, struct Namespace *nsmap); to set xmlns bindings


@section ns1 Top-level root elements of schema "http://www.baitour.com/"

  - <ns1:GetAllCommonPolicy> @ref _ns1__GetAllCommonPolicy
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetAllCommonPolicy(struct soap*, _ns1__GetAllCommonPolicy*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetAllCommonPolicy(struct soap*, _ns1__GetAllCommonPolicy*);
    @endcode

  - <ns1:GetAllCommonPolicyResponse> @ref _ns1__GetAllCommonPolicyResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetAllCommonPolicyResponse(struct soap*, _ns1__GetAllCommonPolicyResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetAllCommonPolicyResponse(struct soap*, _ns1__GetAllCommonPolicyResponse*);
    @endcode

  - <ns1:GetAllCommonPolicyZIP> @ref _ns1__GetAllCommonPolicyZIP
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetAllCommonPolicyZIP(struct soap*, _ns1__GetAllCommonPolicyZIP*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetAllCommonPolicyZIP(struct soap*, _ns1__GetAllCommonPolicyZIP*);
    @endcode

  - <ns1:GetAllCommonPolicyZIPResponse> @ref _ns1__GetAllCommonPolicyZIPResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetAllCommonPolicyZIPResponse(struct soap*, _ns1__GetAllCommonPolicyZIPResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetAllCommonPolicyZIPResponse(struct soap*, _ns1__GetAllCommonPolicyZIPResponse*);
    @endcode

  - <ns1:GetAlterCommonPolicy> @ref _ns1__GetAlterCommonPolicy
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetAlterCommonPolicy(struct soap*, _ns1__GetAlterCommonPolicy*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetAlterCommonPolicy(struct soap*, _ns1__GetAlterCommonPolicy*);
    @endcode

  - <ns1:GetAlterCommonPolicyResponse> @ref _ns1__GetAlterCommonPolicyResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetAlterCommonPolicyResponse(struct soap*, _ns1__GetAlterCommonPolicyResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetAlterCommonPolicyResponse(struct soap*, _ns1__GetAlterCommonPolicyResponse*);
    @endcode

  - <ns1:MatchCommonPolicy> @ref _ns1__MatchCommonPolicy
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__MatchCommonPolicy(struct soap*, _ns1__MatchCommonPolicy*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__MatchCommonPolicy(struct soap*, _ns1__MatchCommonPolicy*);
    @endcode

  - <ns1:MatchCommonPolicyResponse> @ref _ns1__MatchCommonPolicyResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__MatchCommonPolicyResponse(struct soap*, _ns1__MatchCommonPolicyResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__MatchCommonPolicyResponse(struct soap*, _ns1__MatchCommonPolicyResponse*);
    @endcode

  - <ns1:GetAVPolicy> @ref _ns1__GetAVPolicy
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetAVPolicy(struct soap*, _ns1__GetAVPolicy*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetAVPolicy(struct soap*, _ns1__GetAVPolicy*);
    @endcode

  - <ns1:GetAVPolicyResponse> @ref _ns1__GetAVPolicyResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetAVPolicyResponse(struct soap*, _ns1__GetAVPolicyResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetAVPolicyResponse(struct soap*, _ns1__GetAVPolicyResponse*);
    @endcode

  - <ns1:GetDomesticMatchNormalZRateByID> @ref _ns1__GetDomesticMatchNormalZRateByID
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetDomesticMatchNormalZRateByID(struct soap*, _ns1__GetDomesticMatchNormalZRateByID*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetDomesticMatchNormalZRateByID(struct soap*, _ns1__GetDomesticMatchNormalZRateByID*);
    @endcode

  - <ns1:GetDomesticMatchNormalZRateByIDResponse> @ref _ns1__GetDomesticMatchNormalZRateByIDResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetDomesticMatchNormalZRateByIDResponse(struct soap*, _ns1__GetDomesticMatchNormalZRateByIDResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetDomesticMatchNormalZRateByIDResponse(struct soap*, _ns1__GetDomesticMatchNormalZRateByIDResponse*);
    @endcode

  - <ns1:DetailCreateOrder> @ref _ns1__DetailCreateOrder
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__DetailCreateOrder(struct soap*, _ns1__DetailCreateOrder*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__DetailCreateOrder(struct soap*, _ns1__DetailCreateOrder*);
    @endcode

  - <ns1:DetailCreateOrderResponse> @ref _ns1__DetailCreateOrderResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__DetailCreateOrderResponse(struct soap*, _ns1__DetailCreateOrderResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__DetailCreateOrderResponse(struct soap*, _ns1__DetailCreateOrderResponse*);
    @endcode

  - <ns1:RTCreateOrder> @ref _ns1__RTCreateOrder
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__RTCreateOrder(struct soap*, _ns1__RTCreateOrder*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__RTCreateOrder(struct soap*, _ns1__RTCreateOrder*);
    @endcode

  - <ns1:RTCreateOrderResponse> @ref _ns1__RTCreateOrderResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__RTCreateOrderResponse(struct soap*, _ns1__RTCreateOrderResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__RTCreateOrderResponse(struct soap*, _ns1__RTCreateOrderResponse*);
    @endcode

  - <ns1:GetOrderInfo> @ref _ns1__GetOrderInfo
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetOrderInfo(struct soap*, _ns1__GetOrderInfo*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetOrderInfo(struct soap*, _ns1__GetOrderInfo*);
    @endcode

  - <ns1:GetOrderInfoResponse> @ref _ns1__GetOrderInfoResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetOrderInfoResponse(struct soap*, _ns1__GetOrderInfoResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetOrderInfoResponse(struct soap*, _ns1__GetOrderInfoResponse*);
    @endcode

  - <ns1:GetInvalidationProviders> @ref _ns1__GetInvalidationProviders
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetInvalidationProviders(struct soap*, _ns1__GetInvalidationProviders*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetInvalidationProviders(struct soap*, _ns1__GetInvalidationProviders*);
    @endcode

  - <ns1:GetInvalidationProvidersResponse> @ref _ns1__GetInvalidationProvidersResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetInvalidationProvidersResponse(struct soap*, _ns1__GetInvalidationProvidersResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetInvalidationProvidersResponse(struct soap*, _ns1__GetInvalidationProvidersResponse*);
    @endcode

  - <ns1:RefundOrder> @ref _ns1__RefundOrder
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__RefundOrder(struct soap*, _ns1__RefundOrder*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__RefundOrder(struct soap*, _ns1__RefundOrder*);
    @endcode

  - <ns1:RefundOrderResponse> @ref _ns1__RefundOrderResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__RefundOrderResponse(struct soap*, _ns1__RefundOrderResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__RefundOrderResponse(struct soap*, _ns1__RefundOrderResponse*);
    @endcode

  - <ns1:GetChangeFlightDate> @ref _ns1__GetChangeFlightDate
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetChangeFlightDate(struct soap*, _ns1__GetChangeFlightDate*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetChangeFlightDate(struct soap*, _ns1__GetChangeFlightDate*);
    @endcode

  - <ns1:GetChangeFlightDateResponse> @ref _ns1__GetChangeFlightDateResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetChangeFlightDateResponse(struct soap*, _ns1__GetChangeFlightDateResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetChangeFlightDateResponse(struct soap*, _ns1__GetChangeFlightDateResponse*);
    @endcode

  - <ns1:string> (use wsdl2h option -g to auto-generate)

*/

/* End of temp.h */
