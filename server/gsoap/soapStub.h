/* soapStub.h
   Generated by gSOAP 2.8.16 from temp.h

Copyright(C) 2000-2013, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#ifndef soapStub_H
#define soapStub_H
#include <vector>
#define SOAP_NAMESPACE_OF_ns1	"http://www.baitour.com/"
#include "stdsoap2.h"
#if GSOAP_VERSION != 20816
# error "GSOAP VERSION MISMATCH IN GENERATED CODE: PLEASE REINSTALL PACKAGE"
#endif


/******************************************************************************\
 *                                                                            *
 * Enumerations                                                               *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Types with Custom Serializers                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Classes and Structs                                                        *
 *                                                                            *
\******************************************************************************/


#if 0 /* volatile type: do not declare here, declared elsewhere */

#endif

#if 0 /* volatile type: do not declare here, declared elsewhere */

#endif

#ifndef SOAP_TYPE__ns1__GetAllCommonPolicy
#define SOAP_TYPE__ns1__GetAllCommonPolicy (8)
/* ns1:GetAllCommonPolicy */
class SOAP_CMAC _ns1__GetAllCommonPolicy
{
public:
	std::wstring *tripType;	/* optional element of type xsd:string */
	std::wstring *ticketType;	/* optional element of type xsd:string */
	std::wstring *agentUserName;	/* optional element of type xsd:string */
	std::wstring *pwd;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 8; } /* = unique id SOAP_TYPE__ns1__GetAllCommonPolicy */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetAllCommonPolicy() { _ns1__GetAllCommonPolicy::soap_default(NULL); }
	virtual ~_ns1__GetAllCommonPolicy() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetAllCommonPolicyResponse
#define SOAP_TYPE__ns1__GetAllCommonPolicyResponse (9)
/* ns1:GetAllCommonPolicyResponse */
class SOAP_CMAC _ns1__GetAllCommonPolicyResponse
{
public:
	std::wstring *GetAllCommonPolicyResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 9; } /* = unique id SOAP_TYPE__ns1__GetAllCommonPolicyResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetAllCommonPolicyResponse() { _ns1__GetAllCommonPolicyResponse::soap_default(NULL); }
	virtual ~_ns1__GetAllCommonPolicyResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetAllCommonPolicyZIP
#define SOAP_TYPE__ns1__GetAllCommonPolicyZIP (10)
/* ns1:GetAllCommonPolicyZIP */
class SOAP_CMAC _ns1__GetAllCommonPolicyZIP
{
public:
	std::wstring *tripType;	/* optional element of type xsd:string */
	std::wstring *ticketType;	/* optional element of type xsd:string */
	std::wstring *agentUserName;	/* optional element of type xsd:string */
	std::wstring *pwd;	/* optional element of type xsd:string */
	std::wstring *zip;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 10; } /* = unique id SOAP_TYPE__ns1__GetAllCommonPolicyZIP */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetAllCommonPolicyZIP() { _ns1__GetAllCommonPolicyZIP::soap_default(NULL); }
	virtual ~_ns1__GetAllCommonPolicyZIP() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetAllCommonPolicyZIPResponse
#define SOAP_TYPE__ns1__GetAllCommonPolicyZIPResponse (11)
/* ns1:GetAllCommonPolicyZIPResponse */
class SOAP_CMAC _ns1__GetAllCommonPolicyZIPResponse
{
public:
	std::wstring *GetAllCommonPolicyZIPResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 11; } /* = unique id SOAP_TYPE__ns1__GetAllCommonPolicyZIPResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetAllCommonPolicyZIPResponse() { _ns1__GetAllCommonPolicyZIPResponse::soap_default(NULL); }
	virtual ~_ns1__GetAllCommonPolicyZIPResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetAlterCommonPolicy
#define SOAP_TYPE__ns1__GetAlterCommonPolicy (12)
/* ns1:GetAlterCommonPolicy */
class SOAP_CMAC _ns1__GetAlterCommonPolicy
{
public:
	std::wstring *tripType;	/* optional element of type xsd:string */
	std::wstring *ticketType;	/* optional element of type xsd:string */
	std::wstring *agentUserName;	/* optional element of type xsd:string */
	std::wstring *pwd;	/* optional element of type xsd:string */
	std::wstring *rQStartDateTime;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 12; } /* = unique id SOAP_TYPE__ns1__GetAlterCommonPolicy */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetAlterCommonPolicy() { _ns1__GetAlterCommonPolicy::soap_default(NULL); }
	virtual ~_ns1__GetAlterCommonPolicy() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetAlterCommonPolicyResponse
#define SOAP_TYPE__ns1__GetAlterCommonPolicyResponse (13)
/* ns1:GetAlterCommonPolicyResponse */
class SOAP_CMAC _ns1__GetAlterCommonPolicyResponse
{
public:
	std::wstring *GetAlterCommonPolicyResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 13; } /* = unique id SOAP_TYPE__ns1__GetAlterCommonPolicyResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetAlterCommonPolicyResponse() { _ns1__GetAlterCommonPolicyResponse::soap_default(NULL); }
	virtual ~_ns1__GetAlterCommonPolicyResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__MatchCommonPolicy
#define SOAP_TYPE__ns1__MatchCommonPolicy (14)
/* ns1:MatchCommonPolicy */
class SOAP_CMAC _ns1__MatchCommonPolicy
{
public:
	std::wstring *xmlDoc;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 14; } /* = unique id SOAP_TYPE__ns1__MatchCommonPolicy */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__MatchCommonPolicy() { _ns1__MatchCommonPolicy::soap_default(NULL); }
	virtual ~_ns1__MatchCommonPolicy() { }
};
#endif

#ifndef SOAP_TYPE__ns1__MatchCommonPolicyResponse
#define SOAP_TYPE__ns1__MatchCommonPolicyResponse (15)
/* ns1:MatchCommonPolicyResponse */
class SOAP_CMAC _ns1__MatchCommonPolicyResponse
{
public:
	std::wstring *MatchCommonPolicyResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 15; } /* = unique id SOAP_TYPE__ns1__MatchCommonPolicyResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__MatchCommonPolicyResponse() { _ns1__MatchCommonPolicyResponse::soap_default(NULL); }
	virtual ~_ns1__MatchCommonPolicyResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetAVPolicy
#define SOAP_TYPE__ns1__GetAVPolicy (16)
/* ns1:GetAVPolicy */
class SOAP_CMAC _ns1__GetAVPolicy
{
public:
	std::wstring *xmlDoc;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 16; } /* = unique id SOAP_TYPE__ns1__GetAVPolicy */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetAVPolicy() { _ns1__GetAVPolicy::soap_default(NULL); }
	virtual ~_ns1__GetAVPolicy() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetAVPolicyResponse
#define SOAP_TYPE__ns1__GetAVPolicyResponse (17)
/* ns1:GetAVPolicyResponse */
class SOAP_CMAC _ns1__GetAVPolicyResponse
{
public:
	std::wstring *GetAVPolicyResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 17; } /* = unique id SOAP_TYPE__ns1__GetAVPolicyResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetAVPolicyResponse() { _ns1__GetAVPolicyResponse::soap_default(NULL); }
	virtual ~_ns1__GetAVPolicyResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetDomesticMatchNormalZRateByID
#define SOAP_TYPE__ns1__GetDomesticMatchNormalZRateByID (18)
/* ns1:GetDomesticMatchNormalZRateByID */
class SOAP_CMAC _ns1__GetDomesticMatchNormalZRateByID
{
public:
	std::wstring *xmlDoc;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 18; } /* = unique id SOAP_TYPE__ns1__GetDomesticMatchNormalZRateByID */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetDomesticMatchNormalZRateByID() { _ns1__GetDomesticMatchNormalZRateByID::soap_default(NULL); }
	virtual ~_ns1__GetDomesticMatchNormalZRateByID() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetDomesticMatchNormalZRateByIDResponse
#define SOAP_TYPE__ns1__GetDomesticMatchNormalZRateByIDResponse (19)
/* ns1:GetDomesticMatchNormalZRateByIDResponse */
class SOAP_CMAC _ns1__GetDomesticMatchNormalZRateByIDResponse
{
public:
	std::wstring *GetDomesticMatchNormalZRateByIDResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 19; } /* = unique id SOAP_TYPE__ns1__GetDomesticMatchNormalZRateByIDResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetDomesticMatchNormalZRateByIDResponse() { _ns1__GetDomesticMatchNormalZRateByIDResponse::soap_default(NULL); }
	virtual ~_ns1__GetDomesticMatchNormalZRateByIDResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__DetailCreateOrder
#define SOAP_TYPE__ns1__DetailCreateOrder (20)
/* ns1:DetailCreateOrder */
class SOAP_CMAC _ns1__DetailCreateOrder
{
public:
	std::wstring *xmlDoc;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 20; } /* = unique id SOAP_TYPE__ns1__DetailCreateOrder */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__DetailCreateOrder() { _ns1__DetailCreateOrder::soap_default(NULL); }
	virtual ~_ns1__DetailCreateOrder() { }
};
#endif

#ifndef SOAP_TYPE__ns1__DetailCreateOrderResponse
#define SOAP_TYPE__ns1__DetailCreateOrderResponse (21)
/* ns1:DetailCreateOrderResponse */
class SOAP_CMAC _ns1__DetailCreateOrderResponse
{
public:
	std::wstring *DetailCreateOrderResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 21; } /* = unique id SOAP_TYPE__ns1__DetailCreateOrderResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__DetailCreateOrderResponse() { _ns1__DetailCreateOrderResponse::soap_default(NULL); }
	virtual ~_ns1__DetailCreateOrderResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__RTCreateOrder
#define SOAP_TYPE__ns1__RTCreateOrder (22)
/* ns1:RTCreateOrder */
class SOAP_CMAC _ns1__RTCreateOrder
{
public:
	std::wstring *xmlDoc;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 22; } /* = unique id SOAP_TYPE__ns1__RTCreateOrder */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__RTCreateOrder() { _ns1__RTCreateOrder::soap_default(NULL); }
	virtual ~_ns1__RTCreateOrder() { }
};
#endif

#ifndef SOAP_TYPE__ns1__RTCreateOrderResponse
#define SOAP_TYPE__ns1__RTCreateOrderResponse (23)
/* ns1:RTCreateOrderResponse */
class SOAP_CMAC _ns1__RTCreateOrderResponse
{
public:
	std::wstring *RTCreateOrderResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 23; } /* = unique id SOAP_TYPE__ns1__RTCreateOrderResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__RTCreateOrderResponse() { _ns1__RTCreateOrderResponse::soap_default(NULL); }
	virtual ~_ns1__RTCreateOrderResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetOrderInfo
#define SOAP_TYPE__ns1__GetOrderInfo (24)
/* ns1:GetOrderInfo */
class SOAP_CMAC _ns1__GetOrderInfo
{
public:
	std::wstring *AgentCode;	/* optional element of type xsd:string */
	std::wstring *AgentUserName;	/* optional element of type xsd:string */
	std::wstring *AgentPwd;	/* optional element of type xsd:string */
	std::wstring *OrderID;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 24; } /* = unique id SOAP_TYPE__ns1__GetOrderInfo */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetOrderInfo() { _ns1__GetOrderInfo::soap_default(NULL); }
	virtual ~_ns1__GetOrderInfo() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetOrderInfoResponse
#define SOAP_TYPE__ns1__GetOrderInfoResponse (25)
/* ns1:GetOrderInfoResponse */
class SOAP_CMAC _ns1__GetOrderInfoResponse
{
public:
	std::wstring *GetOrderInfoResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 25; } /* = unique id SOAP_TYPE__ns1__GetOrderInfoResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetOrderInfoResponse() { _ns1__GetOrderInfoResponse::soap_default(NULL); }
	virtual ~_ns1__GetOrderInfoResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetInvalidationProviders
#define SOAP_TYPE__ns1__GetInvalidationProviders (26)
/* ns1:GetInvalidationProviders */
class SOAP_CMAC _ns1__GetInvalidationProviders
{
public:
	std::wstring *AgentCode;	/* optional element of type xsd:string */
	std::wstring *AgentUserName;	/* optional element of type xsd:string */
	std::wstring *AgentPwd;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 26; } /* = unique id SOAP_TYPE__ns1__GetInvalidationProviders */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetInvalidationProviders() { _ns1__GetInvalidationProviders::soap_default(NULL); }
	virtual ~_ns1__GetInvalidationProviders() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetInvalidationProvidersResponse
#define SOAP_TYPE__ns1__GetInvalidationProvidersResponse (27)
/* ns1:GetInvalidationProvidersResponse */
class SOAP_CMAC _ns1__GetInvalidationProvidersResponse
{
public:
	std::wstring *GetInvalidationProvidersResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 27; } /* = unique id SOAP_TYPE__ns1__GetInvalidationProvidersResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetInvalidationProvidersResponse() { _ns1__GetInvalidationProvidersResponse::soap_default(NULL); }
	virtual ~_ns1__GetInvalidationProvidersResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__RefundOrder
#define SOAP_TYPE__ns1__RefundOrder (28)
/* ns1:RefundOrder */
class SOAP_CMAC _ns1__RefundOrder
{
public:
	std::wstring *xmlDoc;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 28; } /* = unique id SOAP_TYPE__ns1__RefundOrder */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__RefundOrder() { _ns1__RefundOrder::soap_default(NULL); }
	virtual ~_ns1__RefundOrder() { }
};
#endif

#ifndef SOAP_TYPE__ns1__RefundOrderResponse
#define SOAP_TYPE__ns1__RefundOrderResponse (29)
/* ns1:RefundOrderResponse */
class SOAP_CMAC _ns1__RefundOrderResponse
{
public:
	std::wstring *RefundOrderResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 29; } /* = unique id SOAP_TYPE__ns1__RefundOrderResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__RefundOrderResponse() { _ns1__RefundOrderResponse::soap_default(NULL); }
	virtual ~_ns1__RefundOrderResponse() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetChangeFlightDate
#define SOAP_TYPE__ns1__GetChangeFlightDate (30)
/* ns1:GetChangeFlightDate */
class SOAP_CMAC _ns1__GetChangeFlightDate
{
public:
	std::wstring *xmlDoc;	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 30; } /* = unique id SOAP_TYPE__ns1__GetChangeFlightDate */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetChangeFlightDate() { _ns1__GetChangeFlightDate::soap_default(NULL); }
	virtual ~_ns1__GetChangeFlightDate() { }
};
#endif

#ifndef SOAP_TYPE__ns1__GetChangeFlightDateResponse
#define SOAP_TYPE__ns1__GetChangeFlightDateResponse (31)
/* ns1:GetChangeFlightDateResponse */
class SOAP_CMAC _ns1__GetChangeFlightDateResponse
{
public:
	std::wstring *GetChangeFlightDateResult;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
	struct soap *soap;	/* transient */
public:
	virtual int soap_type() const { return 31; } /* = unique id SOAP_TYPE__ns1__GetChangeFlightDateResponse */
	virtual void soap_default(struct soap*);
	virtual void soap_serialize(struct soap*) const;
	virtual int soap_put(struct soap*, const char*, const char*) const;
	virtual int soap_out(struct soap*, const char*, int, const char*) const;
	virtual void *soap_get(struct soap*, const char*, const char*);
	virtual void *soap_in(struct soap*, const char*, const char*);
	         _ns1__GetChangeFlightDateResponse() { _ns1__GetChangeFlightDateResponse::soap_default(NULL); }
	virtual ~_ns1__GetChangeFlightDateResponse() { }
};
#endif

#ifndef SOAP_TYPE___ns1__GetAllCommonPolicy
#define SOAP_TYPE___ns1__GetAllCommonPolicy (38)
/* Operation wrapper: */
struct __ns1__GetAllCommonPolicy
{
public:
	_ns1__GetAllCommonPolicy *ns1__GetAllCommonPolicy;	/* optional element of type ns1:GetAllCommonPolicy */
public:
	int soap_type() const { return 38; } /* = unique id SOAP_TYPE___ns1__GetAllCommonPolicy */
};
#endif

#ifndef SOAP_TYPE___ns1__GetAllCommonPolicyZIP
#define SOAP_TYPE___ns1__GetAllCommonPolicyZIP (42)
/* Operation wrapper: */
struct __ns1__GetAllCommonPolicyZIP
{
public:
	_ns1__GetAllCommonPolicyZIP *ns1__GetAllCommonPolicyZIP;	/* optional element of type ns1:GetAllCommonPolicyZIP */
public:
	int soap_type() const { return 42; } /* = unique id SOAP_TYPE___ns1__GetAllCommonPolicyZIP */
};
#endif

#ifndef SOAP_TYPE___ns1__GetAlterCommonPolicy
#define SOAP_TYPE___ns1__GetAlterCommonPolicy (46)
/* Operation wrapper: */
struct __ns1__GetAlterCommonPolicy
{
public:
	_ns1__GetAlterCommonPolicy *ns1__GetAlterCommonPolicy;	/* optional element of type ns1:GetAlterCommonPolicy */
public:
	int soap_type() const { return 46; } /* = unique id SOAP_TYPE___ns1__GetAlterCommonPolicy */
};
#endif

#ifndef SOAP_TYPE___ns1__MatchCommonPolicy
#define SOAP_TYPE___ns1__MatchCommonPolicy (50)
/* Operation wrapper: */
struct __ns1__MatchCommonPolicy
{
public:
	_ns1__MatchCommonPolicy *ns1__MatchCommonPolicy;	/* optional element of type ns1:MatchCommonPolicy */
public:
	int soap_type() const { return 50; } /* = unique id SOAP_TYPE___ns1__MatchCommonPolicy */
};
#endif

#ifndef SOAP_TYPE___ns1__GetAVPolicy
#define SOAP_TYPE___ns1__GetAVPolicy (54)
/* Operation wrapper: */
struct __ns1__GetAVPolicy
{
public:
	_ns1__GetAVPolicy *ns1__GetAVPolicy;	/* optional element of type ns1:GetAVPolicy */
public:
	int soap_type() const { return 54; } /* = unique id SOAP_TYPE___ns1__GetAVPolicy */
};
#endif

#ifndef SOAP_TYPE___ns1__GetDomesticMatchNormalZRateByID
#define SOAP_TYPE___ns1__GetDomesticMatchNormalZRateByID (58)
/* Operation wrapper: */
struct __ns1__GetDomesticMatchNormalZRateByID
{
public:
	_ns1__GetDomesticMatchNormalZRateByID *ns1__GetDomesticMatchNormalZRateByID;	/* optional element of type ns1:GetDomesticMatchNormalZRateByID */
public:
	int soap_type() const { return 58; } /* = unique id SOAP_TYPE___ns1__GetDomesticMatchNormalZRateByID */
};
#endif

#ifndef SOAP_TYPE___ns1__DetailCreateOrder
#define SOAP_TYPE___ns1__DetailCreateOrder (62)
/* Operation wrapper: */
struct __ns1__DetailCreateOrder
{
public:
	_ns1__DetailCreateOrder *ns1__DetailCreateOrder;	/* optional element of type ns1:DetailCreateOrder */
public:
	int soap_type() const { return 62; } /* = unique id SOAP_TYPE___ns1__DetailCreateOrder */
};
#endif

#ifndef SOAP_TYPE___ns1__RTCreateOrder
#define SOAP_TYPE___ns1__RTCreateOrder (66)
/* Operation wrapper: */
struct __ns1__RTCreateOrder
{
public:
	_ns1__RTCreateOrder *ns1__RTCreateOrder;	/* optional element of type ns1:RTCreateOrder */
public:
	int soap_type() const { return 66; } /* = unique id SOAP_TYPE___ns1__RTCreateOrder */
};
#endif

#ifndef SOAP_TYPE___ns1__GetOrderInfo
#define SOAP_TYPE___ns1__GetOrderInfo (70)
/* Operation wrapper: */
struct __ns1__GetOrderInfo
{
public:
	_ns1__GetOrderInfo *ns1__GetOrderInfo;	/* optional element of type ns1:GetOrderInfo */
public:
	int soap_type() const { return 70; } /* = unique id SOAP_TYPE___ns1__GetOrderInfo */
};
#endif

#ifndef SOAP_TYPE___ns1__GetInvalidationProviders
#define SOAP_TYPE___ns1__GetInvalidationProviders (74)
/* Operation wrapper: */
struct __ns1__GetInvalidationProviders
{
public:
	_ns1__GetInvalidationProviders *ns1__GetInvalidationProviders;	/* optional element of type ns1:GetInvalidationProviders */
public:
	int soap_type() const { return 74; } /* = unique id SOAP_TYPE___ns1__GetInvalidationProviders */
};
#endif

#ifndef SOAP_TYPE___ns1__RefundOrder
#define SOAP_TYPE___ns1__RefundOrder (78)
/* Operation wrapper: */
struct __ns1__RefundOrder
{
public:
	_ns1__RefundOrder *ns1__RefundOrder;	/* optional element of type ns1:RefundOrder */
public:
	int soap_type() const { return 78; } /* = unique id SOAP_TYPE___ns1__RefundOrder */
};
#endif

#ifndef SOAP_TYPE___ns1__GetChangeFlightDate
#define SOAP_TYPE___ns1__GetChangeFlightDate (82)
/* Operation wrapper: */
struct __ns1__GetChangeFlightDate
{
public:
	_ns1__GetChangeFlightDate *ns1__GetChangeFlightDate;	/* optional element of type ns1:GetChangeFlightDate */
public:
	int soap_type() const { return 82; } /* = unique id SOAP_TYPE___ns1__GetChangeFlightDate */
};
#endif

#ifndef SOAP_TYPE___ns1__GetAllCommonPolicy_
#define SOAP_TYPE___ns1__GetAllCommonPolicy_ (84)
/* Operation wrapper: */
struct __ns1__GetAllCommonPolicy_
{
public:
	_ns1__GetAllCommonPolicy *ns1__GetAllCommonPolicy;	/* optional element of type ns1:GetAllCommonPolicy */
public:
	int soap_type() const { return 84; } /* = unique id SOAP_TYPE___ns1__GetAllCommonPolicy_ */
};
#endif

#ifndef SOAP_TYPE___ns1__GetAllCommonPolicyZIP_
#define SOAP_TYPE___ns1__GetAllCommonPolicyZIP_ (86)
/* Operation wrapper: */
struct __ns1__GetAllCommonPolicyZIP_
{
public:
	_ns1__GetAllCommonPolicyZIP *ns1__GetAllCommonPolicyZIP;	/* optional element of type ns1:GetAllCommonPolicyZIP */
public:
	int soap_type() const { return 86; } /* = unique id SOAP_TYPE___ns1__GetAllCommonPolicyZIP_ */
};
#endif

#ifndef SOAP_TYPE___ns1__GetAlterCommonPolicy_
#define SOAP_TYPE___ns1__GetAlterCommonPolicy_ (88)
/* Operation wrapper: */
struct __ns1__GetAlterCommonPolicy_
{
public:
	_ns1__GetAlterCommonPolicy *ns1__GetAlterCommonPolicy;	/* optional element of type ns1:GetAlterCommonPolicy */
public:
	int soap_type() const { return 88; } /* = unique id SOAP_TYPE___ns1__GetAlterCommonPolicy_ */
};
#endif

#ifndef SOAP_TYPE___ns1__MatchCommonPolicy_
#define SOAP_TYPE___ns1__MatchCommonPolicy_ (90)
/* Operation wrapper: */
struct __ns1__MatchCommonPolicy_
{
public:
	_ns1__MatchCommonPolicy *ns1__MatchCommonPolicy;	/* optional element of type ns1:MatchCommonPolicy */
public:
	int soap_type() const { return 90; } /* = unique id SOAP_TYPE___ns1__MatchCommonPolicy_ */
};
#endif

#ifndef SOAP_TYPE___ns1__GetAVPolicy_
#define SOAP_TYPE___ns1__GetAVPolicy_ (92)
/* Operation wrapper: */
struct __ns1__GetAVPolicy_
{
public:
	_ns1__GetAVPolicy *ns1__GetAVPolicy;	/* optional element of type ns1:GetAVPolicy */
public:
	int soap_type() const { return 92; } /* = unique id SOAP_TYPE___ns1__GetAVPolicy_ */
};
#endif

#ifndef SOAP_TYPE___ns1__GetDomesticMatchNormalZRateByID_
#define SOAP_TYPE___ns1__GetDomesticMatchNormalZRateByID_ (94)
/* Operation wrapper: */
struct __ns1__GetDomesticMatchNormalZRateByID_
{
public:
	_ns1__GetDomesticMatchNormalZRateByID *ns1__GetDomesticMatchNormalZRateByID;	/* optional element of type ns1:GetDomesticMatchNormalZRateByID */
public:
	int soap_type() const { return 94; } /* = unique id SOAP_TYPE___ns1__GetDomesticMatchNormalZRateByID_ */
};
#endif

#ifndef SOAP_TYPE___ns1__DetailCreateOrder_
#define SOAP_TYPE___ns1__DetailCreateOrder_ (96)
/* Operation wrapper: */
struct __ns1__DetailCreateOrder_
{
public:
	_ns1__DetailCreateOrder *ns1__DetailCreateOrder;	/* optional element of type ns1:DetailCreateOrder */
public:
	int soap_type() const { return 96; } /* = unique id SOAP_TYPE___ns1__DetailCreateOrder_ */
};
#endif

#ifndef SOAP_TYPE___ns1__RTCreateOrder_
#define SOAP_TYPE___ns1__RTCreateOrder_ (98)
/* Operation wrapper: */
struct __ns1__RTCreateOrder_
{
public:
	_ns1__RTCreateOrder *ns1__RTCreateOrder;	/* optional element of type ns1:RTCreateOrder */
public:
	int soap_type() const { return 98; } /* = unique id SOAP_TYPE___ns1__RTCreateOrder_ */
};
#endif

#ifndef SOAP_TYPE___ns1__GetOrderInfo_
#define SOAP_TYPE___ns1__GetOrderInfo_ (100)
/* Operation wrapper: */
struct __ns1__GetOrderInfo_
{
public:
	_ns1__GetOrderInfo *ns1__GetOrderInfo;	/* optional element of type ns1:GetOrderInfo */
public:
	int soap_type() const { return 100; } /* = unique id SOAP_TYPE___ns1__GetOrderInfo_ */
};
#endif

#ifndef SOAP_TYPE___ns1__GetInvalidationProviders_
#define SOAP_TYPE___ns1__GetInvalidationProviders_ (102)
/* Operation wrapper: */
struct __ns1__GetInvalidationProviders_
{
public:
	_ns1__GetInvalidationProviders *ns1__GetInvalidationProviders;	/* optional element of type ns1:GetInvalidationProviders */
public:
	int soap_type() const { return 102; } /* = unique id SOAP_TYPE___ns1__GetInvalidationProviders_ */
};
#endif

#ifndef SOAP_TYPE___ns1__RefundOrder_
#define SOAP_TYPE___ns1__RefundOrder_ (104)
/* Operation wrapper: */
struct __ns1__RefundOrder_
{
public:
	_ns1__RefundOrder *ns1__RefundOrder;	/* optional element of type ns1:RefundOrder */
public:
	int soap_type() const { return 104; } /* = unique id SOAP_TYPE___ns1__RefundOrder_ */
};
#endif

#ifndef SOAP_TYPE___ns1__GetChangeFlightDate_
#define SOAP_TYPE___ns1__GetChangeFlightDate_ (106)
/* Operation wrapper: */
struct __ns1__GetChangeFlightDate_
{
public:
	_ns1__GetChangeFlightDate *ns1__GetChangeFlightDate;	/* optional element of type ns1:GetChangeFlightDate */
public:
	int soap_type() const { return 106; } /* = unique id SOAP_TYPE___ns1__GetChangeFlightDate_ */
};
#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (107)
/* SOAP Header: */
struct SOAP_ENV__Header
{
public:
	int soap_type() const { return 107; } /* = unique id SOAP_TYPE_SOAP_ENV__Header */
#ifdef WITH_NOEMPTYSTRUCT
private:
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (108)
/* SOAP Fault Code: */
struct SOAP_ENV__Code
{
public:
	char *SOAP_ENV__Value;	/* optional element of type xsd:QName */
	struct SOAP_ENV__Code *SOAP_ENV__Subcode;	/* optional element of type SOAP-ENV:Code */
public:
	int soap_type() const { return 108; } /* = unique id SOAP_TYPE_SOAP_ENV__Code */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (110)
/* SOAP-ENV:Detail */
struct SOAP_ENV__Detail
{
public:
	char *__any;
	int __type;	/* any type of element <fault> (defined below) */
	void *fault;	/* transient */
public:
	int soap_type() const { return 110; } /* = unique id SOAP_TYPE_SOAP_ENV__Detail */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (113)
/* SOAP-ENV:Reason */
struct SOAP_ENV__Reason
{
public:
	char *SOAP_ENV__Text;	/* optional element of type xsd:string */
public:
	int soap_type() const { return 113; } /* = unique id SOAP_TYPE_SOAP_ENV__Reason */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (114)
/* SOAP Fault: */
struct SOAP_ENV__Fault
{
public:
	char *faultcode;	/* optional element of type xsd:QName */
	char *faultstring;	/* optional element of type xsd:string */
	char *faultactor;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *detail;	/* optional element of type SOAP-ENV:Detail */
	struct SOAP_ENV__Code *SOAP_ENV__Code;	/* optional element of type SOAP-ENV:Code */
	struct SOAP_ENV__Reason *SOAP_ENV__Reason;	/* optional element of type SOAP-ENV:Reason */
	char *SOAP_ENV__Node;	/* optional element of type xsd:string */
	char *SOAP_ENV__Role;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *SOAP_ENV__Detail;	/* optional element of type SOAP-ENV:Detail */
public:
	int soap_type() const { return 114; } /* = unique id SOAP_TYPE_SOAP_ENV__Fault */
};
#endif

#endif

/******************************************************************************\
 *                                                                            *
 * Typedefs                                                                   *
 *                                                                            *
\******************************************************************************/

#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
typedef char *_QName;
#endif

#ifndef SOAP_TYPE__XML
#define SOAP_TYPE__XML (6)
typedef char *_XML;
#endif


/******************************************************************************\
 *                                                                            *
 * Externals                                                                  *
 *                                                                            *
\******************************************************************************/


#endif

/* End of soapStub.h */
