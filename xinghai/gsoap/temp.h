// Reminder: Modify typemap.dat to customize the header file generated by wsdl2h
/* temp.h
   Generated by wsdl2h 2.8.17r from http://webservice.xinghaitour.com/WebService.svc?wsdl and typemap.dat
   2014-04-14 06:06:08 GMT

   DO NOT INCLUDE THIS FILE DIRECTLY INTO YOUR PROJECT BUILDS
   USE THE soapcpp2-GENERATED SOURCE CODE FILES FOR YOUR PROJECT BUILDS

   gSOAP XML Web services tools.
   Copyright (C) 2000-2013 Robert van Engelen, Genivia Inc. All Rights Reserved.
   Part of this software is released under one of the following licenses:
   GPL or Genivia's license for commercial use.
*/

/** @page page_notes Usage Notes

NOTE:

 - Run soapcpp2 on temp.h to generate the SOAP/XML processing logic.
   Use soapcpp2 -I to specify paths for #import
   To build with STL, 'stlvector.h' is imported from 'import' dir in package.
   Use soapcpp2 -j to generate improved proxy and server classes.
 - Use wsdl2h -c and -s to generate pure C code or C++ code without STL.
 - Use 'typemap.dat' to control namespace bindings and type mappings.
   It is strongly recommended to customize the names of the namespace prefixes
   generated by wsdl2h. To do so, modify the prefix bindings in the Namespaces
   section below and add the modified lines to 'typemap.dat' to rerun wsdl2h.
 - Use Doxygen (www.doxygen.org) on this file to generate documentation.
 - Use wsdl2h -R to generate REST operations.
 - Use wsdl2h -nname to use name as the base namespace prefix instead of 'ns'.
 - Use wsdl2h -Nname for service prefix and produce multiple service bindings
 - Use wsdl2h -d to enable DOM support for xsd:anyType.
 - Use wsdl2h -g to auto-generate readers and writers for root elements.
 - Use wsdl2h -b to auto-generate bi-directional operations (duplex ops).
 - Struct/class members serialized as XML attributes are annotated with a '@'.
 - Struct/class members that have a special role are annotated with a '$'.

WARNING:

   DO NOT INCLUDE THIS ANNOTATED FILE DIRECTLY IN YOUR PROJECT SOURCE CODE.
   USE THE FILES GENERATED BY soapcpp2 FOR YOUR PROJECT'S SOURCE CODE:
   THE soapStub.h FILE CONTAINS THIS CONTENT WITHOUT ANNOTATIONS.

LICENSE:

@verbatim
--------------------------------------------------------------------------------
gSOAP XML Web services tools
Copyright (C) 2000-2013, Robert van Engelen, Genivia Inc. All Rights Reserved.

This software is released under one of the following licenses:
GPL or Genivia's license for commercial use.
--------------------------------------------------------------------------------
GPL license.

This program is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation; either version 2 of the License, or (at your option) any later
version.

This program is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with
this program; if not, write to the Free Software Foundation, Inc., 59 Temple
Place, Suite 330, Boston, MA 02111-1307 USA

Author contact information:
engelen@genivia.com / engelen@acm.org

This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial-use license is available from Genivia, Inc., contact@genivia.com
--------------------------------------------------------------------------------
@endverbatim

*/


//gsoapopt w

/******************************************************************************\
 *                                                                            *
 * Definitions                                                                *
 *   http://tempuri.org/                                                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Import                                                                     *
 *                                                                            *
\******************************************************************************/


// STL vector containers (use option -s to remove STL dependency)
#import "stlvector.h"

/******************************************************************************\
 *                                                                            *
 * Schema Namespaces                                                          *
 *                                                                            *
\******************************************************************************/


/* NOTE:

It is strongly recommended to customize the names of the namespace prefixes
generated by wsdl2h. To do so, modify the prefix bindings below and add the
modified lines to typemap.dat to rerun wsdl2h:

tempuri = "http://tempuri.org/"
ns1 = "http://tempuri.org/Imports"

*/

#define SOAP_NAMESPACE_OF_ns1	"http://tempuri.org/Imports"
//gsoap ns1   schema namespace:	http://tempuri.org/Imports
//gsoap ns1   schema form:	unqualified

#define SOAP_NAMESPACE_OF_tempuri	"http://tempuri.org/"
//gsoap tempuri schema namespace:	http://tempuri.org/
//gsoap tempuri schema elementForm:	qualified
//gsoap tempuri schema attributeForm:	unqualified

/******************************************************************************\
 *                                                                            *
 * Built-in Schema Types and Top-Level Elements and Attributes                *
 *                                                                            *
\******************************************************************************/


/// Built-in type "xs:unsignedByte".
typedef unsigned char xsd__unsignedByte;

/******************************************************************************\
 *                                                                            *
 * Forward Declarations                                                       *
 *                                                                            *
\******************************************************************************/



//  Forward declaration of class _tempuri__Get_USCOREHotel_USCOREList.
class _tempuri__Get_USCOREHotel_USCOREList;

//  Forward declaration of class _tempuri__Get_USCOREHotel_USCOREListResponse.
class _tempuri__Get_USCOREHotel_USCOREListResponse;

//  Forward declaration of class _tempuri__Get_USCOREHotel_USCOREInfo.
class _tempuri__Get_USCOREHotel_USCOREInfo;

//  Forward declaration of class _tempuri__Get_USCOREHotel_USCOREInfoResponse.
class _tempuri__Get_USCOREHotel_USCOREInfoResponse;

//  Forward declaration of class _tempuri__Get_USCOREHotel_USCOREPrice.
class _tempuri__Get_USCOREHotel_USCOREPrice;

//  Forward declaration of class _tempuri__Get_USCOREHotel_USCOREPriceResponse.
class _tempuri__Get_USCOREHotel_USCOREPriceResponse;

//  Forward declaration of class _tempuri__Get_USCOREHotel_USCORERoomState.
class _tempuri__Get_USCOREHotel_USCORERoomState;

//  Forward declaration of class _tempuri__Get_USCOREHotel_USCORERoomStateResponse.
class _tempuri__Get_USCOREHotel_USCORERoomStateResponse;

//  Forward declaration of class _tempuri__Book_USCOREAdd.
class _tempuri__Book_USCOREAdd;

//  Forward declaration of class _tempuri__Book_USCOREAddResponse.
class _tempuri__Book_USCOREAddResponse;

//  Forward declaration of class _tempuri__Book_USCOREModify_USCOREHotel.
class _tempuri__Book_USCOREModify_USCOREHotel;

//  Forward declaration of class _tempuri__Book_USCOREModify_USCOREHotelResponse.
class _tempuri__Book_USCOREModify_USCOREHotelResponse;

//  Forward declaration of class _tempuri__Book_USCOREModify_USCOREPlus.
class _tempuri__Book_USCOREModify_USCOREPlus;

//  Forward declaration of class _tempuri__Book_USCOREModify_USCOREPlusResponse.
class _tempuri__Book_USCOREModify_USCOREPlusResponse;

//  Forward declaration of class _tempuri__Book_USCOREApply.
class _tempuri__Book_USCOREApply;

//  Forward declaration of class _tempuri__Book_USCOREApplyResponse.
class _tempuri__Book_USCOREApplyResponse;

//  Forward declaration of class _tempuri__Get_USCOREOrder.
class _tempuri__Get_USCOREOrder;

//  Forward declaration of class _tempuri__Get_USCOREOrderResponse.
class _tempuri__Get_USCOREOrderResponse;

//  Forward declaration of class _tempuri__Get_USCOREOrder_USCOREList.
class _tempuri__Get_USCOREOrder_USCOREList;

//  Forward declaration of class _tempuri__Get_USCOREOrder_USCOREListResponse.
class _tempuri__Get_USCOREOrder_USCOREListResponse;

/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://tempuri.org/Imports                                               *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://tempuri.org/                                                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://tempuri.org/Imports                                               *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://tempuri.org/                                                      *
 *                                                                            *
\******************************************************************************/



/// Top-level root element "http://tempuri.org/":Get_Hotel_List

/// "http://tempuri.org/":Get_Hotel_List is a complexType.
/// class _tempuri__Get_USCOREHotel_USCOREList operations:
/// - soap_new__tempuri__Get_USCOREHotel_USCOREList(soap*) allocate
/// - soap_new__tempuri__Get_USCOREHotel_USCOREList(soap*, int num) allocate array
/// - soap_new_req__tempuri__Get_USCOREHotel_USCOREList(soap*, ...) allocate, set required members
/// - soap_new_set__tempuri__Get_USCOREHotel_USCOREList(soap*, ...) allocate, set all public members
/// - int soap_read__tempuri__Get_USCOREHotel_USCOREList(soap*, _tempuri__Get_USCOREHotel_USCOREList*) deserialize from a stream
/// - int soap_write__tempuri__Get_USCOREHotel_USCOREList(soap, _tempuri__Get_USCOREHotel_USCOREList*) serialize to a stream
class _tempuri__Get_USCOREHotel_USCOREList
{ public:
/// Element CustomerID of type xs:string.
    std::wstring*                        CustomerID                     0;	///< Nillable pointer.
/// Element SignStr of type xs:string.
    std::wstring*                        SignStr                        0;	///< Nillable pointer.
/// Element LastAccessDate of type xs:string.
    std::wstring*                        LastAccessDate                 0;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":Get_Hotel_ListResponse

/// "http://tempuri.org/":Get_Hotel_ListResponse is a complexType.
/// class _tempuri__Get_USCOREHotel_USCOREListResponse operations:
/// - soap_new__tempuri__Get_USCOREHotel_USCOREListResponse(soap*) allocate
/// - soap_new__tempuri__Get_USCOREHotel_USCOREListResponse(soap*, int num) allocate array
/// - soap_new_req__tempuri__Get_USCOREHotel_USCOREListResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tempuri__Get_USCOREHotel_USCOREListResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tempuri__Get_USCOREHotel_USCOREListResponse(soap*, _tempuri__Get_USCOREHotel_USCOREListResponse*) deserialize from a stream
/// - int soap_write__tempuri__Get_USCOREHotel_USCOREListResponse(soap, _tempuri__Get_USCOREHotel_USCOREListResponse*) serialize to a stream
class _tempuri__Get_USCOREHotel_USCOREListResponse
{ public:
/// Element Get_Hotel_ListResult of type xs:string.
    std::wstring*                        Get_USCOREHotel_USCOREListResult 0;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":Get_Hotel_Info

/// "http://tempuri.org/":Get_Hotel_Info is a complexType.
/// class _tempuri__Get_USCOREHotel_USCOREInfo operations:
/// - soap_new__tempuri__Get_USCOREHotel_USCOREInfo(soap*) allocate
/// - soap_new__tempuri__Get_USCOREHotel_USCOREInfo(soap*, int num) allocate array
/// - soap_new_req__tempuri__Get_USCOREHotel_USCOREInfo(soap*, ...) allocate, set required members
/// - soap_new_set__tempuri__Get_USCOREHotel_USCOREInfo(soap*, ...) allocate, set all public members
/// - int soap_read__tempuri__Get_USCOREHotel_USCOREInfo(soap*, _tempuri__Get_USCOREHotel_USCOREInfo*) deserialize from a stream
/// - int soap_write__tempuri__Get_USCOREHotel_USCOREInfo(soap, _tempuri__Get_USCOREHotel_USCOREInfo*) serialize to a stream
class _tempuri__Get_USCOREHotel_USCOREInfo
{ public:
/// Element CustomerID of type xs:string.
    std::wstring*                        CustomerID                     0;	///< Nillable pointer.
/// Element SignStr of type xs:string.
    std::wstring*                        SignStr                        0;	///< Nillable pointer.
/// Element HotelID of type xs:int.
    int*                                 HotelID                        0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":Get_Hotel_InfoResponse

/// "http://tempuri.org/":Get_Hotel_InfoResponse is a complexType.
/// class _tempuri__Get_USCOREHotel_USCOREInfoResponse operations:
/// - soap_new__tempuri__Get_USCOREHotel_USCOREInfoResponse(soap*) allocate
/// - soap_new__tempuri__Get_USCOREHotel_USCOREInfoResponse(soap*, int num) allocate array
/// - soap_new_req__tempuri__Get_USCOREHotel_USCOREInfoResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tempuri__Get_USCOREHotel_USCOREInfoResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tempuri__Get_USCOREHotel_USCOREInfoResponse(soap*, _tempuri__Get_USCOREHotel_USCOREInfoResponse*) deserialize from a stream
/// - int soap_write__tempuri__Get_USCOREHotel_USCOREInfoResponse(soap, _tempuri__Get_USCOREHotel_USCOREInfoResponse*) serialize to a stream
class _tempuri__Get_USCOREHotel_USCOREInfoResponse
{ public:
/// Element Get_Hotel_InfoResult of type xs:string.
    std::wstring*                        Get_USCOREHotel_USCOREInfoResult 0;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":Get_Hotel_Price

/// "http://tempuri.org/":Get_Hotel_Price is a complexType.
/// class _tempuri__Get_USCOREHotel_USCOREPrice operations:
/// - soap_new__tempuri__Get_USCOREHotel_USCOREPrice(soap*) allocate
/// - soap_new__tempuri__Get_USCOREHotel_USCOREPrice(soap*, int num) allocate array
/// - soap_new_req__tempuri__Get_USCOREHotel_USCOREPrice(soap*, ...) allocate, set required members
/// - soap_new_set__tempuri__Get_USCOREHotel_USCOREPrice(soap*, ...) allocate, set all public members
/// - int soap_read__tempuri__Get_USCOREHotel_USCOREPrice(soap*, _tempuri__Get_USCOREHotel_USCOREPrice*) deserialize from a stream
/// - int soap_write__tempuri__Get_USCOREHotel_USCOREPrice(soap, _tempuri__Get_USCOREHotel_USCOREPrice*) serialize to a stream
class _tempuri__Get_USCOREHotel_USCOREPrice
{ public:
/// Element CustomerID of type xs:string.
    std::wstring*                        CustomerID                     0;	///< Nillable pointer.
/// Element SignStr of type xs:string.
    std::wstring*                        SignStr                        0;	///< Nillable pointer.
/// Element HotelID of type xs:int.
    int*                                 HotelID                        0;	///< Optional element.
/// Element RoomID of type xs:string.
    std::wstring*                        RoomID                         0;	///< Nillable pointer.
/// Element StartDate of type xs:string.
    std::wstring*                        StartDate                      0;	///< Nillable pointer.
/// Element EndDate of type xs:string.
    std::wstring*                        EndDate                        0;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":Get_Hotel_PriceResponse

/// "http://tempuri.org/":Get_Hotel_PriceResponse is a complexType.
/// class _tempuri__Get_USCOREHotel_USCOREPriceResponse operations:
/// - soap_new__tempuri__Get_USCOREHotel_USCOREPriceResponse(soap*) allocate
/// - soap_new__tempuri__Get_USCOREHotel_USCOREPriceResponse(soap*, int num) allocate array
/// - soap_new_req__tempuri__Get_USCOREHotel_USCOREPriceResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tempuri__Get_USCOREHotel_USCOREPriceResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tempuri__Get_USCOREHotel_USCOREPriceResponse(soap*, _tempuri__Get_USCOREHotel_USCOREPriceResponse*) deserialize from a stream
/// - int soap_write__tempuri__Get_USCOREHotel_USCOREPriceResponse(soap, _tempuri__Get_USCOREHotel_USCOREPriceResponse*) serialize to a stream
class _tempuri__Get_USCOREHotel_USCOREPriceResponse
{ public:
/// Element Get_Hotel_PriceResult of type xs:string.
    std::wstring*                        Get_USCOREHotel_USCOREPriceResult 0;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":Get_Hotel_RoomState

/// "http://tempuri.org/":Get_Hotel_RoomState is a complexType.
/// class _tempuri__Get_USCOREHotel_USCORERoomState operations:
/// - soap_new__tempuri__Get_USCOREHotel_USCORERoomState(soap*) allocate
/// - soap_new__tempuri__Get_USCOREHotel_USCORERoomState(soap*, int num) allocate array
/// - soap_new_req__tempuri__Get_USCOREHotel_USCORERoomState(soap*, ...) allocate, set required members
/// - soap_new_set__tempuri__Get_USCOREHotel_USCORERoomState(soap*, ...) allocate, set all public members
/// - int soap_read__tempuri__Get_USCOREHotel_USCORERoomState(soap*, _tempuri__Get_USCOREHotel_USCORERoomState*) deserialize from a stream
/// - int soap_write__tempuri__Get_USCOREHotel_USCORERoomState(soap, _tempuri__Get_USCOREHotel_USCORERoomState*) serialize to a stream
class _tempuri__Get_USCOREHotel_USCORERoomState
{ public:
/// Element CustomerID of type xs:string.
    std::wstring*                        CustomerID                     0;	///< Nillable pointer.
/// Element SignStr of type xs:string.
    std::wstring*                        SignStr                        0;	///< Nillable pointer.
/// Element HotelID of type xs:int.
    int*                                 HotelID                        0;	///< Optional element.
/// Element RoomID of type xs:string.
    std::wstring*                        RoomID                         0;	///< Nillable pointer.
/// Element StartDate of type xs:string.
    std::wstring*                        StartDate                      0;	///< Nillable pointer.
/// Element EndDate of type xs:string.
    std::wstring*                        EndDate                        0;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":Get_Hotel_RoomStateResponse

/// "http://tempuri.org/":Get_Hotel_RoomStateResponse is a complexType.
/// class _tempuri__Get_USCOREHotel_USCORERoomStateResponse operations:
/// - soap_new__tempuri__Get_USCOREHotel_USCORERoomStateResponse(soap*) allocate
/// - soap_new__tempuri__Get_USCOREHotel_USCORERoomStateResponse(soap*, int num) allocate array
/// - soap_new_req__tempuri__Get_USCOREHotel_USCORERoomStateResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tempuri__Get_USCOREHotel_USCORERoomStateResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tempuri__Get_USCOREHotel_USCORERoomStateResponse(soap*, _tempuri__Get_USCOREHotel_USCORERoomStateResponse*) deserialize from a stream
/// - int soap_write__tempuri__Get_USCOREHotel_USCORERoomStateResponse(soap, _tempuri__Get_USCOREHotel_USCORERoomStateResponse*) serialize to a stream
class _tempuri__Get_USCOREHotel_USCORERoomStateResponse
{ public:
/// Element Get_Hotel_RoomStateResult of type xs:string.
    std::wstring*                        Get_USCOREHotel_USCORERoomStateResult 0;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":Book_Add

/// "http://tempuri.org/":Book_Add is a complexType.
/// class _tempuri__Book_USCOREAdd operations:
/// - soap_new__tempuri__Book_USCOREAdd(soap*) allocate
/// - soap_new__tempuri__Book_USCOREAdd(soap*, int num) allocate array
/// - soap_new_req__tempuri__Book_USCOREAdd(soap*, ...) allocate, set required members
/// - soap_new_set__tempuri__Book_USCOREAdd(soap*, ...) allocate, set all public members
/// - int soap_read__tempuri__Book_USCOREAdd(soap*, _tempuri__Book_USCOREAdd*) deserialize from a stream
/// - int soap_write__tempuri__Book_USCOREAdd(soap, _tempuri__Book_USCOREAdd*) serialize to a stream
class _tempuri__Book_USCOREAdd
{ public:
/// Element CustomerID of type xs:string.
    std::wstring*                        CustomerID                     0;	///< Nillable pointer.
/// Element ContactUser of type xs:string.
    std::wstring*                        ContactUser                    0;	///< Nillable pointer.
/// Element ContactName of type xs:string.
    std::wstring*                        ContactName                    0;	///< Nillable pointer.
/// Element BookType of type xs:int.
    int*                                 BookType                       0;	///< Optional element.
/// Element BookInfo of type xs:string.
    std::wstring*                        BookInfo                       0;	///< Nillable pointer.
/// Element VeryfyStr of type xs:string.
    std::wstring*                        VeryfyStr                      0;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":Book_AddResponse

/// "http://tempuri.org/":Book_AddResponse is a complexType.
/// class _tempuri__Book_USCOREAddResponse operations:
/// - soap_new__tempuri__Book_USCOREAddResponse(soap*) allocate
/// - soap_new__tempuri__Book_USCOREAddResponse(soap*, int num) allocate array
/// - soap_new_req__tempuri__Book_USCOREAddResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tempuri__Book_USCOREAddResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tempuri__Book_USCOREAddResponse(soap*, _tempuri__Book_USCOREAddResponse*) deserialize from a stream
/// - int soap_write__tempuri__Book_USCOREAddResponse(soap, _tempuri__Book_USCOREAddResponse*) serialize to a stream
class _tempuri__Book_USCOREAddResponse
{ public:
/// Element Book_AddResult of type xs:string.
    std::wstring*                        Book_USCOREAddResult           0;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":Book_Modify_Hotel

/// "http://tempuri.org/":Book_Modify_Hotel is a complexType.
/// class _tempuri__Book_USCOREModify_USCOREHotel operations:
/// - soap_new__tempuri__Book_USCOREModify_USCOREHotel(soap*) allocate
/// - soap_new__tempuri__Book_USCOREModify_USCOREHotel(soap*, int num) allocate array
/// - soap_new_req__tempuri__Book_USCOREModify_USCOREHotel(soap*, ...) allocate, set required members
/// - soap_new_set__tempuri__Book_USCOREModify_USCOREHotel(soap*, ...) allocate, set all public members
/// - int soap_read__tempuri__Book_USCOREModify_USCOREHotel(soap*, _tempuri__Book_USCOREModify_USCOREHotel*) deserialize from a stream
/// - int soap_write__tempuri__Book_USCOREModify_USCOREHotel(soap, _tempuri__Book_USCOREModify_USCOREHotel*) serialize to a stream
class _tempuri__Book_USCOREModify_USCOREHotel
{ public:
/// Element CustomerID of type xs:string.
    std::wstring*                        CustomerID                     0;	///< Nillable pointer.
/// Element Action of type xs:string.
    std::wstring*                        Action                         0;	///< Nillable pointer.
/// Element OrderType of type xs:unsignedByte.
    xsd__unsignedByte*                   OrderType                      0;	///< Optional element.
/// Element OrderID of type xs:string.
    std::wstring*                        OrderID                        0;	///< Nillable pointer.
/// Element Hotel of type xs:string.
    std::wstring*                        Hotel                          0;	///< Nillable pointer.
/// Element VeryfyStr of type xs:string.
    std::wstring*                        VeryfyStr                      0;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":Book_Modify_HotelResponse

/// "http://tempuri.org/":Book_Modify_HotelResponse is a complexType.
/// class _tempuri__Book_USCOREModify_USCOREHotelResponse operations:
/// - soap_new__tempuri__Book_USCOREModify_USCOREHotelResponse(soap*) allocate
/// - soap_new__tempuri__Book_USCOREModify_USCOREHotelResponse(soap*, int num) allocate array
/// - soap_new_req__tempuri__Book_USCOREModify_USCOREHotelResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tempuri__Book_USCOREModify_USCOREHotelResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tempuri__Book_USCOREModify_USCOREHotelResponse(soap*, _tempuri__Book_USCOREModify_USCOREHotelResponse*) deserialize from a stream
/// - int soap_write__tempuri__Book_USCOREModify_USCOREHotelResponse(soap, _tempuri__Book_USCOREModify_USCOREHotelResponse*) serialize to a stream
class _tempuri__Book_USCOREModify_USCOREHotelResponse
{ public:
/// Element Book_Modify_HotelResult of type xs:string.
    std::wstring*                        Book_USCOREModify_USCOREHotelResult 0;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":Book_Modify_Plus

/// "http://tempuri.org/":Book_Modify_Plus is a complexType.
/// class _tempuri__Book_USCOREModify_USCOREPlus operations:
/// - soap_new__tempuri__Book_USCOREModify_USCOREPlus(soap*) allocate
/// - soap_new__tempuri__Book_USCOREModify_USCOREPlus(soap*, int num) allocate array
/// - soap_new_req__tempuri__Book_USCOREModify_USCOREPlus(soap*, ...) allocate, set required members
/// - soap_new_set__tempuri__Book_USCOREModify_USCOREPlus(soap*, ...) allocate, set all public members
/// - int soap_read__tempuri__Book_USCOREModify_USCOREPlus(soap*, _tempuri__Book_USCOREModify_USCOREPlus*) deserialize from a stream
/// - int soap_write__tempuri__Book_USCOREModify_USCOREPlus(soap, _tempuri__Book_USCOREModify_USCOREPlus*) serialize to a stream
class _tempuri__Book_USCOREModify_USCOREPlus
{ public:
/// Element CustomerID of type xs:string.
    std::wstring*                        CustomerID                     0;	///< Nillable pointer.
/// Element xhOrderID of type xs:string.
    std::wstring*                        xhOrderID                      0;	///< Nillable pointer.
/// Element AdditionalProduct of type xs:string.
    std::wstring*                        AdditionalProduct              0;	///< Nillable pointer.
/// Element VeryfyStr of type xs:string.
    std::wstring*                        VeryfyStr                      0;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":Book_Modify_PlusResponse

/// "http://tempuri.org/":Book_Modify_PlusResponse is a complexType.
/// class _tempuri__Book_USCOREModify_USCOREPlusResponse operations:
/// - soap_new__tempuri__Book_USCOREModify_USCOREPlusResponse(soap*) allocate
/// - soap_new__tempuri__Book_USCOREModify_USCOREPlusResponse(soap*, int num) allocate array
/// - soap_new_req__tempuri__Book_USCOREModify_USCOREPlusResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tempuri__Book_USCOREModify_USCOREPlusResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tempuri__Book_USCOREModify_USCOREPlusResponse(soap*, _tempuri__Book_USCOREModify_USCOREPlusResponse*) deserialize from a stream
/// - int soap_write__tempuri__Book_USCOREModify_USCOREPlusResponse(soap, _tempuri__Book_USCOREModify_USCOREPlusResponse*) serialize to a stream
class _tempuri__Book_USCOREModify_USCOREPlusResponse
{ public:
/// Element Book_Modify_PlusResult of type xs:string.
    std::wstring*                        Book_USCOREModify_USCOREPlusResult 0;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":Book_Apply

/// "http://tempuri.org/":Book_Apply is a complexType.
/// class _tempuri__Book_USCOREApply operations:
/// - soap_new__tempuri__Book_USCOREApply(soap*) allocate
/// - soap_new__tempuri__Book_USCOREApply(soap*, int num) allocate array
/// - soap_new_req__tempuri__Book_USCOREApply(soap*, ...) allocate, set required members
/// - soap_new_set__tempuri__Book_USCOREApply(soap*, ...) allocate, set all public members
/// - int soap_read__tempuri__Book_USCOREApply(soap*, _tempuri__Book_USCOREApply*) deserialize from a stream
/// - int soap_write__tempuri__Book_USCOREApply(soap, _tempuri__Book_USCOREApply*) serialize to a stream
class _tempuri__Book_USCOREApply
{ public:
/// Element CustomerID of type xs:string.
    std::wstring*                        CustomerID                     0;	///< Nillable pointer.
/// Element Action of type xs:string.
    std::wstring*                        Action                         0;	///< Nillable pointer.
/// Element OrderType of type xs:unsignedByte.
    xsd__unsignedByte*                   OrderType                      0;	///< Optional element.
/// Element OrderID of type xs:string.
    std::wstring*                        OrderID                        0;	///< Nillable pointer.
/// Element ApplyContent of type xs:string.
    std::wstring*                        ApplyContent                   0;	///< Nillable pointer.
/// Element VeryfyStr of type xs:string.
    std::wstring*                        VeryfyStr                      0;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":Book_ApplyResponse

/// "http://tempuri.org/":Book_ApplyResponse is a complexType.
/// class _tempuri__Book_USCOREApplyResponse operations:
/// - soap_new__tempuri__Book_USCOREApplyResponse(soap*) allocate
/// - soap_new__tempuri__Book_USCOREApplyResponse(soap*, int num) allocate array
/// - soap_new_req__tempuri__Book_USCOREApplyResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tempuri__Book_USCOREApplyResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tempuri__Book_USCOREApplyResponse(soap*, _tempuri__Book_USCOREApplyResponse*) deserialize from a stream
/// - int soap_write__tempuri__Book_USCOREApplyResponse(soap, _tempuri__Book_USCOREApplyResponse*) serialize to a stream
class _tempuri__Book_USCOREApplyResponse
{ public:
/// Element Book_ApplyResult of type xs:string.
    std::wstring*                        Book_USCOREApplyResult         0;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":Get_Order

/// "http://tempuri.org/":Get_Order is a complexType.
/// class _tempuri__Get_USCOREOrder operations:
/// - soap_new__tempuri__Get_USCOREOrder(soap*) allocate
/// - soap_new__tempuri__Get_USCOREOrder(soap*, int num) allocate array
/// - soap_new_req__tempuri__Get_USCOREOrder(soap*, ...) allocate, set required members
/// - soap_new_set__tempuri__Get_USCOREOrder(soap*, ...) allocate, set all public members
/// - int soap_read__tempuri__Get_USCOREOrder(soap*, _tempuri__Get_USCOREOrder*) deserialize from a stream
/// - int soap_write__tempuri__Get_USCOREOrder(soap, _tempuri__Get_USCOREOrder*) serialize to a stream
class _tempuri__Get_USCOREOrder
{ public:
/// Element CustomerID of type xs:string.
    std::wstring*                        CustomerID                     0;	///< Nillable pointer.
/// Element SignStr of type xs:string.
    std::wstring*                        SignStr                        0;	///< Nillable pointer.
/// Element OrderType of type xs:unsignedByte.
    xsd__unsignedByte*                   OrderType                      0;	///< Optional element.
/// Element OrderID of type xs:string.
    std::wstring*                        OrderID                        0;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":Get_OrderResponse

/// "http://tempuri.org/":Get_OrderResponse is a complexType.
/// class _tempuri__Get_USCOREOrderResponse operations:
/// - soap_new__tempuri__Get_USCOREOrderResponse(soap*) allocate
/// - soap_new__tempuri__Get_USCOREOrderResponse(soap*, int num) allocate array
/// - soap_new_req__tempuri__Get_USCOREOrderResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tempuri__Get_USCOREOrderResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tempuri__Get_USCOREOrderResponse(soap*, _tempuri__Get_USCOREOrderResponse*) deserialize from a stream
/// - int soap_write__tempuri__Get_USCOREOrderResponse(soap, _tempuri__Get_USCOREOrderResponse*) serialize to a stream
class _tempuri__Get_USCOREOrderResponse
{ public:
/// Element Get_OrderResult of type xs:string.
    std::wstring*                        Get_USCOREOrderResult          0;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":Get_Order_List

/// "http://tempuri.org/":Get_Order_List is a complexType.
/// class _tempuri__Get_USCOREOrder_USCOREList operations:
/// - soap_new__tempuri__Get_USCOREOrder_USCOREList(soap*) allocate
/// - soap_new__tempuri__Get_USCOREOrder_USCOREList(soap*, int num) allocate array
/// - soap_new_req__tempuri__Get_USCOREOrder_USCOREList(soap*, ...) allocate, set required members
/// - soap_new_set__tempuri__Get_USCOREOrder_USCOREList(soap*, ...) allocate, set all public members
/// - int soap_read__tempuri__Get_USCOREOrder_USCOREList(soap*, _tempuri__Get_USCOREOrder_USCOREList*) deserialize from a stream
/// - int soap_write__tempuri__Get_USCOREOrder_USCOREList(soap, _tempuri__Get_USCOREOrder_USCOREList*) serialize to a stream
class _tempuri__Get_USCOREOrder_USCOREList
{ public:
/// Element CustomerID of type xs:string.
    std::wstring*                        CustomerID                     0;	///< Nillable pointer.
/// Element SignStr of type xs:string.
    std::wstring*                        SignStr                        0;	///< Nillable pointer.
/// Element DateType of type xs:unsignedByte.
    xsd__unsignedByte*                   DateType                       0;	///< Optional element.
/// Element StartDate of type xs:string.
    std::wstring*                        StartDate                      0;	///< Nillable pointer.
/// Element EndDate of type xs:string.
    std::wstring*                        EndDate                        0;	///< Nillable pointer.
/// Element page of type xs:int.
    int*                                 page                           0;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};


/// Top-level root element "http://tempuri.org/":Get_Order_ListResponse

/// "http://tempuri.org/":Get_Order_ListResponse is a complexType.
/// class _tempuri__Get_USCOREOrder_USCOREListResponse operations:
/// - soap_new__tempuri__Get_USCOREOrder_USCOREListResponse(soap*) allocate
/// - soap_new__tempuri__Get_USCOREOrder_USCOREListResponse(soap*, int num) allocate array
/// - soap_new_req__tempuri__Get_USCOREOrder_USCOREListResponse(soap*, ...) allocate, set required members
/// - soap_new_set__tempuri__Get_USCOREOrder_USCOREListResponse(soap*, ...) allocate, set all public members
/// - int soap_read__tempuri__Get_USCOREOrder_USCOREListResponse(soap*, _tempuri__Get_USCOREOrder_USCOREListResponse*) deserialize from a stream
/// - int soap_write__tempuri__Get_USCOREOrder_USCOREListResponse(soap, _tempuri__Get_USCOREOrder_USCOREListResponse*) serialize to a stream
class _tempuri__Get_USCOREOrder_USCOREListResponse
{ public:
/// Element Get_Order_ListResult of type xs:string.
    std::wstring*                        Get_USCOREOrder_USCOREListResult 0;	///< Nillable pointer.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://tempuri.org/Imports                                               *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://tempuri.org/Imports                                               *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://tempuri.org/                                                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://tempuri.org/                                                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Services                                                                   *
 *                                                                            *
\******************************************************************************/

// This service supports SOAP 1.2 namespaces:
#import "soap12.h"

//gsoap tempuri service name:	BasicHttpBinding_USCOREixinghai 
//gsoap tempuri service type:	ixinghai 
//gsoap tempuri service port:	http://webservice.xinghaitour.com/WebService.svc 
//gsoap tempuri service namespace:	http://tempuri.org/ 
//gsoap tempuri service transport:	http://schemas.xmlsoap.org/soap/http 

/** @mainpage xinghai Definitions

@section xinghai_bindings Service Bindings

  - @ref BasicHttpBinding_USCOREixinghai

@section xinghai_more More Information

  - @ref page_notes "Usage Notes"

  - @ref page_XMLDataBinding "XML Data Binding"

  - @ref SOAP_ENV__Header "SOAP Header Content" (when applicable)

  - @ref SOAP_ENV__Detail "SOAP Fault Detail Content" (when applicable)


*/

/**

@page BasicHttpBinding_USCOREixinghai Binding "BasicHttpBinding_USCOREixinghai"

@section BasicHttpBinding_USCOREixinghai_operations Operations of Binding  "BasicHttpBinding_USCOREixinghai"

  - @ref __tempuri__Get_USCOREHotel_USCOREList

  - @ref __tempuri__Get_USCOREHotel_USCOREInfo

  - @ref __tempuri__Get_USCOREHotel_USCOREPrice

  - @ref __tempuri__Get_USCOREHotel_USCORERoomState

  - @ref __tempuri__Book_USCOREAdd

  - @ref __tempuri__Book_USCOREModify_USCOREHotel

  - @ref __tempuri__Book_USCOREModify_USCOREPlus

  - @ref __tempuri__Book_USCOREApply

  - @ref __tempuri__Get_USCOREOrder

  - @ref __tempuri__Get_USCOREOrder_USCOREList

@section BasicHttpBinding_USCOREixinghai_ports Endpoints of Binding  "BasicHttpBinding_USCOREixinghai"

  - http://webservice.xinghaitour.com/WebService.svc

Note: use wsdl2h option -Nname to change the service binding prefix name


*/

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   BasicHttpBinding_USCOREixinghai                                          *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tempuri__Get_USCOREHotel_USCOREList                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__tempuri__Get_USCOREHotel_USCOREList" of service binding "BasicHttpBinding_USCOREixinghai"

/**

Operation details:

  - SOAP document/literal style messaging

  - Action: "http://tempuri.org/ixinghai/Get_Hotel_List"

  - Addressing input action: "http://tempuri.org/ixinghai/Get_Hotel_List"

  - Addressing output action: "http://tempuri.org/ixinghai/Get_Hotel_ListResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tempuri__Get_USCOREHotel_USCOREList(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tempuri__Get_USCOREHotel_USCOREList* tempuri__Get_USCOREHotel_USCOREList,
    // output parameters:
    _tempuri__Get_USCOREHotel_USCOREListResponse* tempuri__Get_USCOREHotel_USCOREListResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tempuri__Get_USCOREHotel_USCOREList(
    struct soap *soap,
    // input parameters:
    _tempuri__Get_USCOREHotel_USCOREList* tempuri__Get_USCOREHotel_USCOREList,
    // output parameters:
    _tempuri__Get_USCOREHotel_USCOREListResponse* tempuri__Get_USCOREHotel_USCOREListResponse
  );
@endcode

C++ proxy class (defined in soapBasicHttpBinding_USCOREixinghaiProxy.h):
@code
  class BasicHttpBinding_USCOREixinghaiProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBasicHttpBinding_USCOREixinghaiService.h):
@code
  class BasicHttpBinding_USCOREixinghaiService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tempuri service method-protocol:	Get_USCOREHotel_USCOREList SOAP
//gsoap tempuri service method-style:	Get_USCOREHotel_USCOREList document
//gsoap tempuri service method-encoding:	Get_USCOREHotel_USCOREList literal
//gsoap tempuri service method-input-action:	Get_USCOREHotel_USCOREList http://tempuri.org/ixinghai/Get_Hotel_List
//gsoap tempuri service method-output-action:	Get_USCOREHotel_USCOREList http://tempuri.org/ixinghai/Get_Hotel_ListResponse
int __tempuri__Get_USCOREHotel_USCOREList(
    _tempuri__Get_USCOREHotel_USCOREList* tempuri__Get_USCOREHotel_USCOREList,	///< Input parameter
    _tempuri__Get_USCOREHotel_USCOREListResponse* tempuri__Get_USCOREHotel_USCOREListResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tempuri__Get_USCOREHotel_USCOREInfo                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__tempuri__Get_USCOREHotel_USCOREInfo" of service binding "BasicHttpBinding_USCOREixinghai"

/**

Operation details:

  - SOAP document/literal style messaging

  - Action: "http://tempuri.org/ixinghai/Get_Hotel_Info"

  - Addressing input action: "http://tempuri.org/ixinghai/Get_Hotel_Info"

  - Addressing output action: "http://tempuri.org/ixinghai/Get_Hotel_InfoResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tempuri__Get_USCOREHotel_USCOREInfo(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tempuri__Get_USCOREHotel_USCOREInfo* tempuri__Get_USCOREHotel_USCOREInfo,
    // output parameters:
    _tempuri__Get_USCOREHotel_USCOREInfoResponse* tempuri__Get_USCOREHotel_USCOREInfoResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tempuri__Get_USCOREHotel_USCOREInfo(
    struct soap *soap,
    // input parameters:
    _tempuri__Get_USCOREHotel_USCOREInfo* tempuri__Get_USCOREHotel_USCOREInfo,
    // output parameters:
    _tempuri__Get_USCOREHotel_USCOREInfoResponse* tempuri__Get_USCOREHotel_USCOREInfoResponse
  );
@endcode

C++ proxy class (defined in soapBasicHttpBinding_USCOREixinghaiProxy.h):
@code
  class BasicHttpBinding_USCOREixinghaiProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBasicHttpBinding_USCOREixinghaiService.h):
@code
  class BasicHttpBinding_USCOREixinghaiService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tempuri service method-protocol:	Get_USCOREHotel_USCOREInfo SOAP
//gsoap tempuri service method-style:	Get_USCOREHotel_USCOREInfo document
//gsoap tempuri service method-encoding:	Get_USCOREHotel_USCOREInfo literal
//gsoap tempuri service method-input-action:	Get_USCOREHotel_USCOREInfo http://tempuri.org/ixinghai/Get_Hotel_Info
//gsoap tempuri service method-output-action:	Get_USCOREHotel_USCOREInfo http://tempuri.org/ixinghai/Get_Hotel_InfoResponse
int __tempuri__Get_USCOREHotel_USCOREInfo(
    _tempuri__Get_USCOREHotel_USCOREInfo* tempuri__Get_USCOREHotel_USCOREInfo,	///< Input parameter
    _tempuri__Get_USCOREHotel_USCOREInfoResponse* tempuri__Get_USCOREHotel_USCOREInfoResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tempuri__Get_USCOREHotel_USCOREPrice                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__tempuri__Get_USCOREHotel_USCOREPrice" of service binding "BasicHttpBinding_USCOREixinghai"

/**

Operation details:

  - SOAP document/literal style messaging

  - Action: "http://tempuri.org/ixinghai/Get_Hotel_Price"

  - Addressing input action: "http://tempuri.org/ixinghai/Get_Hotel_Price"

  - Addressing output action: "http://tempuri.org/ixinghai/Get_Hotel_PriceResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tempuri__Get_USCOREHotel_USCOREPrice(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tempuri__Get_USCOREHotel_USCOREPrice* tempuri__Get_USCOREHotel_USCOREPrice,
    // output parameters:
    _tempuri__Get_USCOREHotel_USCOREPriceResponse* tempuri__Get_USCOREHotel_USCOREPriceResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tempuri__Get_USCOREHotel_USCOREPrice(
    struct soap *soap,
    // input parameters:
    _tempuri__Get_USCOREHotel_USCOREPrice* tempuri__Get_USCOREHotel_USCOREPrice,
    // output parameters:
    _tempuri__Get_USCOREHotel_USCOREPriceResponse* tempuri__Get_USCOREHotel_USCOREPriceResponse
  );
@endcode

C++ proxy class (defined in soapBasicHttpBinding_USCOREixinghaiProxy.h):
@code
  class BasicHttpBinding_USCOREixinghaiProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBasicHttpBinding_USCOREixinghaiService.h):
@code
  class BasicHttpBinding_USCOREixinghaiService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tempuri service method-protocol:	Get_USCOREHotel_USCOREPrice SOAP
//gsoap tempuri service method-style:	Get_USCOREHotel_USCOREPrice document
//gsoap tempuri service method-encoding:	Get_USCOREHotel_USCOREPrice literal
//gsoap tempuri service method-input-action:	Get_USCOREHotel_USCOREPrice http://tempuri.org/ixinghai/Get_Hotel_Price
//gsoap tempuri service method-output-action:	Get_USCOREHotel_USCOREPrice http://tempuri.org/ixinghai/Get_Hotel_PriceResponse
int __tempuri__Get_USCOREHotel_USCOREPrice(
    _tempuri__Get_USCOREHotel_USCOREPrice* tempuri__Get_USCOREHotel_USCOREPrice,	///< Input parameter
    _tempuri__Get_USCOREHotel_USCOREPriceResponse* tempuri__Get_USCOREHotel_USCOREPriceResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tempuri__Get_USCOREHotel_USCORERoomState                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__tempuri__Get_USCOREHotel_USCORERoomState" of service binding "BasicHttpBinding_USCOREixinghai"

/**

Operation details:

  - SOAP document/literal style messaging

  - Action: "http://tempuri.org/ixinghai/Get_Hotel_RoomState"

  - Addressing input action: "http://tempuri.org/ixinghai/Get_Hotel_RoomState"

  - Addressing output action: "http://tempuri.org/ixinghai/Get_Hotel_RoomStateResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tempuri__Get_USCOREHotel_USCORERoomState(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tempuri__Get_USCOREHotel_USCORERoomState* tempuri__Get_USCOREHotel_USCORERoomState,
    // output parameters:
    _tempuri__Get_USCOREHotel_USCORERoomStateResponse* tempuri__Get_USCOREHotel_USCORERoomStateResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tempuri__Get_USCOREHotel_USCORERoomState(
    struct soap *soap,
    // input parameters:
    _tempuri__Get_USCOREHotel_USCORERoomState* tempuri__Get_USCOREHotel_USCORERoomState,
    // output parameters:
    _tempuri__Get_USCOREHotel_USCORERoomStateResponse* tempuri__Get_USCOREHotel_USCORERoomStateResponse
  );
@endcode

C++ proxy class (defined in soapBasicHttpBinding_USCOREixinghaiProxy.h):
@code
  class BasicHttpBinding_USCOREixinghaiProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBasicHttpBinding_USCOREixinghaiService.h):
@code
  class BasicHttpBinding_USCOREixinghaiService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tempuri service method-protocol:	Get_USCOREHotel_USCORERoomState SOAP
//gsoap tempuri service method-style:	Get_USCOREHotel_USCORERoomState document
//gsoap tempuri service method-encoding:	Get_USCOREHotel_USCORERoomState literal
//gsoap tempuri service method-input-action:	Get_USCOREHotel_USCORERoomState http://tempuri.org/ixinghai/Get_Hotel_RoomState
//gsoap tempuri service method-output-action:	Get_USCOREHotel_USCORERoomState http://tempuri.org/ixinghai/Get_Hotel_RoomStateResponse
int __tempuri__Get_USCOREHotel_USCORERoomState(
    _tempuri__Get_USCOREHotel_USCORERoomState* tempuri__Get_USCOREHotel_USCORERoomState,	///< Input parameter
    _tempuri__Get_USCOREHotel_USCORERoomStateResponse* tempuri__Get_USCOREHotel_USCORERoomStateResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tempuri__Book_USCOREAdd                                                *
 *                                                                            *
\******************************************************************************/


/// Operation "__tempuri__Book_USCOREAdd" of service binding "BasicHttpBinding_USCOREixinghai"

/**

Operation details:

  - SOAP document/literal style messaging

  - Action: "http://tempuri.org/ixinghai/Book_Add"

  - Addressing input action: "http://tempuri.org/ixinghai/Book_Add"

  - Addressing output action: "http://tempuri.org/ixinghai/Book_AddResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tempuri__Book_USCOREAdd(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tempuri__Book_USCOREAdd*           tempuri__Book_USCOREAdd,
    // output parameters:
    _tempuri__Book_USCOREAddResponse*   tempuri__Book_USCOREAddResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tempuri__Book_USCOREAdd(
    struct soap *soap,
    // input parameters:
    _tempuri__Book_USCOREAdd*           tempuri__Book_USCOREAdd,
    // output parameters:
    _tempuri__Book_USCOREAddResponse*   tempuri__Book_USCOREAddResponse
  );
@endcode

C++ proxy class (defined in soapBasicHttpBinding_USCOREixinghaiProxy.h):
@code
  class BasicHttpBinding_USCOREixinghaiProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBasicHttpBinding_USCOREixinghaiService.h):
@code
  class BasicHttpBinding_USCOREixinghaiService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tempuri service method-protocol:	Book_USCOREAdd SOAP
//gsoap tempuri service method-style:	Book_USCOREAdd document
//gsoap tempuri service method-encoding:	Book_USCOREAdd literal
//gsoap tempuri service method-input-action:	Book_USCOREAdd http://tempuri.org/ixinghai/Book_Add
//gsoap tempuri service method-output-action:	Book_USCOREAdd http://tempuri.org/ixinghai/Book_AddResponse
int __tempuri__Book_USCOREAdd(
    _tempuri__Book_USCOREAdd*           tempuri__Book_USCOREAdd,	///< Input parameter
    _tempuri__Book_USCOREAddResponse*   tempuri__Book_USCOREAddResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tempuri__Book_USCOREModify_USCOREHotel                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__tempuri__Book_USCOREModify_USCOREHotel" of service binding "BasicHttpBinding_USCOREixinghai"

/**

Operation details:

  - SOAP document/literal style messaging

  - Action: "http://tempuri.org/ixinghai/Book_Modify_Hotel"

  - Addressing input action: "http://tempuri.org/ixinghai/Book_Modify_Hotel"

  - Addressing output action: "http://tempuri.org/ixinghai/Book_Modify_HotelResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tempuri__Book_USCOREModify_USCOREHotel(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tempuri__Book_USCOREModify_USCOREHotel* tempuri__Book_USCOREModify_USCOREHotel,
    // output parameters:
    _tempuri__Book_USCOREModify_USCOREHotelResponse* tempuri__Book_USCOREModify_USCOREHotelResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tempuri__Book_USCOREModify_USCOREHotel(
    struct soap *soap,
    // input parameters:
    _tempuri__Book_USCOREModify_USCOREHotel* tempuri__Book_USCOREModify_USCOREHotel,
    // output parameters:
    _tempuri__Book_USCOREModify_USCOREHotelResponse* tempuri__Book_USCOREModify_USCOREHotelResponse
  );
@endcode

C++ proxy class (defined in soapBasicHttpBinding_USCOREixinghaiProxy.h):
@code
  class BasicHttpBinding_USCOREixinghaiProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBasicHttpBinding_USCOREixinghaiService.h):
@code
  class BasicHttpBinding_USCOREixinghaiService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tempuri service method-protocol:	Book_USCOREModify_USCOREHotel SOAP
//gsoap tempuri service method-style:	Book_USCOREModify_USCOREHotel document
//gsoap tempuri service method-encoding:	Book_USCOREModify_USCOREHotel literal
//gsoap tempuri service method-input-action:	Book_USCOREModify_USCOREHotel http://tempuri.org/ixinghai/Book_Modify_Hotel
//gsoap tempuri service method-output-action:	Book_USCOREModify_USCOREHotel http://tempuri.org/ixinghai/Book_Modify_HotelResponse
int __tempuri__Book_USCOREModify_USCOREHotel(
    _tempuri__Book_USCOREModify_USCOREHotel* tempuri__Book_USCOREModify_USCOREHotel,	///< Input parameter
    _tempuri__Book_USCOREModify_USCOREHotelResponse* tempuri__Book_USCOREModify_USCOREHotelResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tempuri__Book_USCOREModify_USCOREPlus                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__tempuri__Book_USCOREModify_USCOREPlus" of service binding "BasicHttpBinding_USCOREixinghai"

/**

Operation details:

  - SOAP document/literal style messaging

  - Action: "http://tempuri.org/ixinghai/Book_Modify_Plus"

  - Addressing input action: "http://tempuri.org/ixinghai/Book_Modify_Plus"

  - Addressing output action: "http://tempuri.org/ixinghai/Book_Modify_PlusResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tempuri__Book_USCOREModify_USCOREPlus(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tempuri__Book_USCOREModify_USCOREPlus* tempuri__Book_USCOREModify_USCOREPlus,
    // output parameters:
    _tempuri__Book_USCOREModify_USCOREPlusResponse* tempuri__Book_USCOREModify_USCOREPlusResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tempuri__Book_USCOREModify_USCOREPlus(
    struct soap *soap,
    // input parameters:
    _tempuri__Book_USCOREModify_USCOREPlus* tempuri__Book_USCOREModify_USCOREPlus,
    // output parameters:
    _tempuri__Book_USCOREModify_USCOREPlusResponse* tempuri__Book_USCOREModify_USCOREPlusResponse
  );
@endcode

C++ proxy class (defined in soapBasicHttpBinding_USCOREixinghaiProxy.h):
@code
  class BasicHttpBinding_USCOREixinghaiProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBasicHttpBinding_USCOREixinghaiService.h):
@code
  class BasicHttpBinding_USCOREixinghaiService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tempuri service method-protocol:	Book_USCOREModify_USCOREPlus SOAP
//gsoap tempuri service method-style:	Book_USCOREModify_USCOREPlus document
//gsoap tempuri service method-encoding:	Book_USCOREModify_USCOREPlus literal
//gsoap tempuri service method-input-action:	Book_USCOREModify_USCOREPlus http://tempuri.org/ixinghai/Book_Modify_Plus
//gsoap tempuri service method-output-action:	Book_USCOREModify_USCOREPlus http://tempuri.org/ixinghai/Book_Modify_PlusResponse
int __tempuri__Book_USCOREModify_USCOREPlus(
    _tempuri__Book_USCOREModify_USCOREPlus* tempuri__Book_USCOREModify_USCOREPlus,	///< Input parameter
    _tempuri__Book_USCOREModify_USCOREPlusResponse* tempuri__Book_USCOREModify_USCOREPlusResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tempuri__Book_USCOREApply                                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__tempuri__Book_USCOREApply" of service binding "BasicHttpBinding_USCOREixinghai"

/**

Operation details:

  - SOAP document/literal style messaging

  - Action: "http://tempuri.org/ixinghai/Book_Apply"

  - Addressing input action: "http://tempuri.org/ixinghai/Book_Apply"

  - Addressing output action: "http://tempuri.org/ixinghai/Book_ApplyResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tempuri__Book_USCOREApply(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tempuri__Book_USCOREApply*         tempuri__Book_USCOREApply,
    // output parameters:
    _tempuri__Book_USCOREApplyResponse* tempuri__Book_USCOREApplyResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tempuri__Book_USCOREApply(
    struct soap *soap,
    // input parameters:
    _tempuri__Book_USCOREApply*         tempuri__Book_USCOREApply,
    // output parameters:
    _tempuri__Book_USCOREApplyResponse* tempuri__Book_USCOREApplyResponse
  );
@endcode

C++ proxy class (defined in soapBasicHttpBinding_USCOREixinghaiProxy.h):
@code
  class BasicHttpBinding_USCOREixinghaiProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBasicHttpBinding_USCOREixinghaiService.h):
@code
  class BasicHttpBinding_USCOREixinghaiService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tempuri service method-protocol:	Book_USCOREApply SOAP
//gsoap tempuri service method-style:	Book_USCOREApply document
//gsoap tempuri service method-encoding:	Book_USCOREApply literal
//gsoap tempuri service method-input-action:	Book_USCOREApply http://tempuri.org/ixinghai/Book_Apply
//gsoap tempuri service method-output-action:	Book_USCOREApply http://tempuri.org/ixinghai/Book_ApplyResponse
int __tempuri__Book_USCOREApply(
    _tempuri__Book_USCOREApply*         tempuri__Book_USCOREApply,	///< Input parameter
    _tempuri__Book_USCOREApplyResponse* tempuri__Book_USCOREApplyResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tempuri__Get_USCOREOrder                                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__tempuri__Get_USCOREOrder" of service binding "BasicHttpBinding_USCOREixinghai"

/**

Operation details:

  - SOAP document/literal style messaging

  - Action: "http://tempuri.org/ixinghai/Get_Order"

  - Addressing input action: "http://tempuri.org/ixinghai/Get_Order"

  - Addressing output action: "http://tempuri.org/ixinghai/Get_OrderResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tempuri__Get_USCOREOrder(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tempuri__Get_USCOREOrder*          tempuri__Get_USCOREOrder,
    // output parameters:
    _tempuri__Get_USCOREOrderResponse*  tempuri__Get_USCOREOrderResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tempuri__Get_USCOREOrder(
    struct soap *soap,
    // input parameters:
    _tempuri__Get_USCOREOrder*          tempuri__Get_USCOREOrder,
    // output parameters:
    _tempuri__Get_USCOREOrderResponse*  tempuri__Get_USCOREOrderResponse
  );
@endcode

C++ proxy class (defined in soapBasicHttpBinding_USCOREixinghaiProxy.h):
@code
  class BasicHttpBinding_USCOREixinghaiProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBasicHttpBinding_USCOREixinghaiService.h):
@code
  class BasicHttpBinding_USCOREixinghaiService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tempuri service method-protocol:	Get_USCOREOrder SOAP
//gsoap tempuri service method-style:	Get_USCOREOrder document
//gsoap tempuri service method-encoding:	Get_USCOREOrder literal
//gsoap tempuri service method-input-action:	Get_USCOREOrder http://tempuri.org/ixinghai/Get_Order
//gsoap tempuri service method-output-action:	Get_USCOREOrder http://tempuri.org/ixinghai/Get_OrderResponse
int __tempuri__Get_USCOREOrder(
    _tempuri__Get_USCOREOrder*          tempuri__Get_USCOREOrder,	///< Input parameter
    _tempuri__Get_USCOREOrderResponse*  tempuri__Get_USCOREOrderResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __tempuri__Get_USCOREOrder_USCOREList                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__tempuri__Get_USCOREOrder_USCOREList" of service binding "BasicHttpBinding_USCOREixinghai"

/**

Operation details:

  - SOAP document/literal style messaging

  - Action: "http://tempuri.org/ixinghai/Get_Order_List"

  - Addressing input action: "http://tempuri.org/ixinghai/Get_Order_List"

  - Addressing output action: "http://tempuri.org/ixinghai/Get_Order_ListResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___tempuri__Get_USCOREOrder_USCOREList(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _tempuri__Get_USCOREOrder_USCOREList* tempuri__Get_USCOREOrder_USCOREList,
    // output parameters:
    _tempuri__Get_USCOREOrder_USCOREListResponse* tempuri__Get_USCOREOrder_USCOREListResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __tempuri__Get_USCOREOrder_USCOREList(
    struct soap *soap,
    // input parameters:
    _tempuri__Get_USCOREOrder_USCOREList* tempuri__Get_USCOREOrder_USCOREList,
    // output parameters:
    _tempuri__Get_USCOREOrder_USCOREListResponse* tempuri__Get_USCOREOrder_USCOREListResponse
  );
@endcode

C++ proxy class (defined in soapBasicHttpBinding_USCOREixinghaiProxy.h):
@code
  class BasicHttpBinding_USCOREixinghaiProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapBasicHttpBinding_USCOREixinghaiService.h):
@code
  class BasicHttpBinding_USCOREixinghaiService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate greatly improved and easy-to-use service classes;

*/

//gsoap tempuri service method-protocol:	Get_USCOREOrder_USCOREList SOAP
//gsoap tempuri service method-style:	Get_USCOREOrder_USCOREList document
//gsoap tempuri service method-encoding:	Get_USCOREOrder_USCOREList literal
//gsoap tempuri service method-input-action:	Get_USCOREOrder_USCOREList http://tempuri.org/ixinghai/Get_Order_List
//gsoap tempuri service method-output-action:	Get_USCOREOrder_USCOREList http://tempuri.org/ixinghai/Get_Order_ListResponse
int __tempuri__Get_USCOREOrder_USCOREList(
    _tempuri__Get_USCOREOrder_USCOREList* tempuri__Get_USCOREOrder_USCOREList,	///< Input parameter
    _tempuri__Get_USCOREOrder_USCOREListResponse* tempuri__Get_USCOREOrder_USCOREListResponse	///< Output parameter
);

/**

@page BasicHttpBinding_USCOREixinghai Binding "BasicHttpBinding_USCOREixinghai"

@section BasicHttpBinding_USCOREixinghai_policy_enablers Policy Enablers of Binding  "BasicHttpBinding_USCOREixinghai"

Based on policies, this service imports

  - WS-Policy reminders and enablers:
    - WS-Addressing 1.0 (2005/08, accepts 2004/08):
	@code
	#import "wsa5.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-Addressing (2004/08):
	@code
	#import "wsa.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-ReliableMessaging 1.0:
	@code
	#import "wsrm5.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsrmapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	soap_register_plugin(soap, soap_wsrm); // register the wsrm plugin in your code
	// See the user guide gsoap/doc/wsrm/html/index.html
	@endcode
    - WS-ReliableMessaging 1.1:
	@code
	#import "wsrm.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsrmapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	soap_register_plugin(soap, soap_wsrm); // register the wsrm plugin in your code
	// See the user guide gsoap/doc/wsrm/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.0 (accepts 1.1):
	@code
	#import "wsse.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.1 (accepts 1.0):
	@code
	#import "wsse11.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - HTTP Digest Authentication:
	@code
	#include "plugin/httpda.h"
	soap_register_plugin(soap, soap_http_da); // register the HTTP DA plugin in your code
	// See the user guide gsoap/doc/httpda/html/index.html
	@endcode
*/


/******************************************************************************\
 *                                                                            *
 * XML Data Binding                                                           *
 *                                                                            *
\******************************************************************************/


/**

@page page_XMLDataBinding XML Data Binding

SOAP/XML services use data bindings contractually bound by WSDL and auto-
generated by wsdl2h and soapcpp2 (see Service Bindings). Plain data bindings
are adopted from XML schemas as part of the WSDL types section or when running
wsdl2h on a set of schemas to produce non-SOAP-based XML data bindings.

The following readers and writers are C/C++ data type (de)serializers auto-
generated by wsdl2h and soapcpp2. Run soapcpp2 on this file to generate the
(de)serialization code, which is stored in soapC.c[pp]. Include "soapH.h" in
your code to import these data type and function declarations. Only use the
soapcpp2-generated files in your project build. Do not include the wsdl2h-
generated .h file in your code.

Data can be read in XML and deserialized from:
  - a file descriptor, using soap->recvfd = fd
  - a socket, using soap->socket = ...
  - a C++ stream, using soap->is = ...
  - a buffer, using the soap->frecv() callback

Data can be serialized in XML and written to:
  - a file descriptor, using soap->sendfd = fd
  - a socket, using soap->socket = ...
  - a C++ stream, using soap->os = ...
  - a buffer, using the soap->fsend() callback

The following options are available for (de)serialization control:
  - soap->encodingStyle = NULL; to remove SOAP 1.1/1.2 encodingStyle
  - soap_mode(soap, SOAP_XML_TREE); XML without id-ref (no cycles!)
  - soap_mode(soap, SOAP_XML_GRAPH); XML with id-ref (including cycles)
  - soap_set_namespaces(soap, struct Namespace *nsmap); to set xmlns bindings


@section ns1 Top-level root elements of schema "http://tempuri.org/Imports"

@section tempuri Top-level root elements of schema "http://tempuri.org/"

  - <tempuri:Get_Hotel_List> @ref _tempuri__Get_USCOREHotel_USCOREList
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tempuri__Get_USCOREHotel_USCOREList(struct soap*, _tempuri__Get_USCOREHotel_USCOREList*);
    // Writer (returns SOAP_OK on success):
    soap_write__tempuri__Get_USCOREHotel_USCOREList(struct soap*, _tempuri__Get_USCOREHotel_USCOREList*);
    @endcode

  - <tempuri:Get_Hotel_ListResponse> @ref _tempuri__Get_USCOREHotel_USCOREListResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tempuri__Get_USCOREHotel_USCOREListResponse(struct soap*, _tempuri__Get_USCOREHotel_USCOREListResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tempuri__Get_USCOREHotel_USCOREListResponse(struct soap*, _tempuri__Get_USCOREHotel_USCOREListResponse*);
    @endcode

  - <tempuri:Get_Hotel_Info> @ref _tempuri__Get_USCOREHotel_USCOREInfo
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tempuri__Get_USCOREHotel_USCOREInfo(struct soap*, _tempuri__Get_USCOREHotel_USCOREInfo*);
    // Writer (returns SOAP_OK on success):
    soap_write__tempuri__Get_USCOREHotel_USCOREInfo(struct soap*, _tempuri__Get_USCOREHotel_USCOREInfo*);
    @endcode

  - <tempuri:Get_Hotel_InfoResponse> @ref _tempuri__Get_USCOREHotel_USCOREInfoResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tempuri__Get_USCOREHotel_USCOREInfoResponse(struct soap*, _tempuri__Get_USCOREHotel_USCOREInfoResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tempuri__Get_USCOREHotel_USCOREInfoResponse(struct soap*, _tempuri__Get_USCOREHotel_USCOREInfoResponse*);
    @endcode

  - <tempuri:Get_Hotel_Price> @ref _tempuri__Get_USCOREHotel_USCOREPrice
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tempuri__Get_USCOREHotel_USCOREPrice(struct soap*, _tempuri__Get_USCOREHotel_USCOREPrice*);
    // Writer (returns SOAP_OK on success):
    soap_write__tempuri__Get_USCOREHotel_USCOREPrice(struct soap*, _tempuri__Get_USCOREHotel_USCOREPrice*);
    @endcode

  - <tempuri:Get_Hotel_PriceResponse> @ref _tempuri__Get_USCOREHotel_USCOREPriceResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tempuri__Get_USCOREHotel_USCOREPriceResponse(struct soap*, _tempuri__Get_USCOREHotel_USCOREPriceResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tempuri__Get_USCOREHotel_USCOREPriceResponse(struct soap*, _tempuri__Get_USCOREHotel_USCOREPriceResponse*);
    @endcode

  - <tempuri:Get_Hotel_RoomState> @ref _tempuri__Get_USCOREHotel_USCORERoomState
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tempuri__Get_USCOREHotel_USCORERoomState(struct soap*, _tempuri__Get_USCOREHotel_USCORERoomState*);
    // Writer (returns SOAP_OK on success):
    soap_write__tempuri__Get_USCOREHotel_USCORERoomState(struct soap*, _tempuri__Get_USCOREHotel_USCORERoomState*);
    @endcode

  - <tempuri:Get_Hotel_RoomStateResponse> @ref _tempuri__Get_USCOREHotel_USCORERoomStateResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tempuri__Get_USCOREHotel_USCORERoomStateResponse(struct soap*, _tempuri__Get_USCOREHotel_USCORERoomStateResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tempuri__Get_USCOREHotel_USCORERoomStateResponse(struct soap*, _tempuri__Get_USCOREHotel_USCORERoomStateResponse*);
    @endcode

  - <tempuri:Book_Add> @ref _tempuri__Book_USCOREAdd
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tempuri__Book_USCOREAdd(struct soap*, _tempuri__Book_USCOREAdd*);
    // Writer (returns SOAP_OK on success):
    soap_write__tempuri__Book_USCOREAdd(struct soap*, _tempuri__Book_USCOREAdd*);
    @endcode

  - <tempuri:Book_AddResponse> @ref _tempuri__Book_USCOREAddResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tempuri__Book_USCOREAddResponse(struct soap*, _tempuri__Book_USCOREAddResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tempuri__Book_USCOREAddResponse(struct soap*, _tempuri__Book_USCOREAddResponse*);
    @endcode

  - <tempuri:Book_Modify_Hotel> @ref _tempuri__Book_USCOREModify_USCOREHotel
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tempuri__Book_USCOREModify_USCOREHotel(struct soap*, _tempuri__Book_USCOREModify_USCOREHotel*);
    // Writer (returns SOAP_OK on success):
    soap_write__tempuri__Book_USCOREModify_USCOREHotel(struct soap*, _tempuri__Book_USCOREModify_USCOREHotel*);
    @endcode

  - <tempuri:Book_Modify_HotelResponse> @ref _tempuri__Book_USCOREModify_USCOREHotelResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tempuri__Book_USCOREModify_USCOREHotelResponse(struct soap*, _tempuri__Book_USCOREModify_USCOREHotelResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tempuri__Book_USCOREModify_USCOREHotelResponse(struct soap*, _tempuri__Book_USCOREModify_USCOREHotelResponse*);
    @endcode

  - <tempuri:Book_Modify_Plus> @ref _tempuri__Book_USCOREModify_USCOREPlus
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tempuri__Book_USCOREModify_USCOREPlus(struct soap*, _tempuri__Book_USCOREModify_USCOREPlus*);
    // Writer (returns SOAP_OK on success):
    soap_write__tempuri__Book_USCOREModify_USCOREPlus(struct soap*, _tempuri__Book_USCOREModify_USCOREPlus*);
    @endcode

  - <tempuri:Book_Modify_PlusResponse> @ref _tempuri__Book_USCOREModify_USCOREPlusResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tempuri__Book_USCOREModify_USCOREPlusResponse(struct soap*, _tempuri__Book_USCOREModify_USCOREPlusResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tempuri__Book_USCOREModify_USCOREPlusResponse(struct soap*, _tempuri__Book_USCOREModify_USCOREPlusResponse*);
    @endcode

  - <tempuri:Book_Apply> @ref _tempuri__Book_USCOREApply
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tempuri__Book_USCOREApply(struct soap*, _tempuri__Book_USCOREApply*);
    // Writer (returns SOAP_OK on success):
    soap_write__tempuri__Book_USCOREApply(struct soap*, _tempuri__Book_USCOREApply*);
    @endcode

  - <tempuri:Book_ApplyResponse> @ref _tempuri__Book_USCOREApplyResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tempuri__Book_USCOREApplyResponse(struct soap*, _tempuri__Book_USCOREApplyResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tempuri__Book_USCOREApplyResponse(struct soap*, _tempuri__Book_USCOREApplyResponse*);
    @endcode

  - <tempuri:Get_Order> @ref _tempuri__Get_USCOREOrder
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tempuri__Get_USCOREOrder(struct soap*, _tempuri__Get_USCOREOrder*);
    // Writer (returns SOAP_OK on success):
    soap_write__tempuri__Get_USCOREOrder(struct soap*, _tempuri__Get_USCOREOrder*);
    @endcode

  - <tempuri:Get_OrderResponse> @ref _tempuri__Get_USCOREOrderResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tempuri__Get_USCOREOrderResponse(struct soap*, _tempuri__Get_USCOREOrderResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tempuri__Get_USCOREOrderResponse(struct soap*, _tempuri__Get_USCOREOrderResponse*);
    @endcode

  - <tempuri:Get_Order_List> @ref _tempuri__Get_USCOREOrder_USCOREList
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tempuri__Get_USCOREOrder_USCOREList(struct soap*, _tempuri__Get_USCOREOrder_USCOREList*);
    // Writer (returns SOAP_OK on success):
    soap_write__tempuri__Get_USCOREOrder_USCOREList(struct soap*, _tempuri__Get_USCOREOrder_USCOREList*);
    @endcode

  - <tempuri:Get_Order_ListResponse> @ref _tempuri__Get_USCOREOrder_USCOREListResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__tempuri__Get_USCOREOrder_USCOREListResponse(struct soap*, _tempuri__Get_USCOREOrder_USCOREListResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__tempuri__Get_USCOREOrder_USCOREListResponse(struct soap*, _tempuri__Get_USCOREOrder_USCOREListResponse*);
    @endcode

*/

/* End of temp.h */
